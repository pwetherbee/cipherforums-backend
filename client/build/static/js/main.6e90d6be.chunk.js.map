{"version":3,"sources":["helpers/convert.js","components/CipherText.js","components/MiniThread.js","components/SecretBox.js","components/Comment.js","components/CommentContainer.js","logo.svg","helpers/wallet.js","helpers/api.js","components/LoadingPageIcon.js","components/SearchBar.js","components/MenuAppBar.js","components/ImageCircle.js","components/Bio.js","components/PostCard.js","components/PostCardNew.js","components/UserPosts.js","components/ConfirmDelete.js","pages/Post.js","components/FollowContainer.js","helpers/hicdex.js","components/LikedNFTs.js","pages/User.js","pages/Settings.js","pages/Signup.js","pages/Login.js","pages/Create.js","pages/Public.js","pages/Help.js","pages/Home.js","pages/Search.js","components/PublicPost.js","pages/PubForum.js","pages/CreatePublic.js","components/Confirm.js","pages/Verify.js","components/Fullscreen.js","pages/Nftdisplay.js","pages/NftExplore.js","components/Media.js","helpers/objkt.js","components/HistoryList.js","components/HistoryGrid.js","pages/Nft.js","pages/Feed.js","pages/FourZero.js","components/Footer.js","components/ScrollToTop.js","pages/Matrix.js","App.js","reportWebVitals.js","index.js"],"names":["CryptoJS","require","sha256","ascii","rightRotate","value","amount","i","j","mathPow","Math","pow","maxWord","result","words","asciiBitLength","hash","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","w15","w2","a","e","temp1","concat","b","toString","ascii_to_hexa","str","arr1","n","l","length","hex","Number","push","join","hex_to_dec","s","String","BigInt","dec_to_hex","bn","key_to_dec","key","dec_to_text","key_dec","text","hexx","fromCharCode","parseInt","substr","hex_to_text","includes","split","text_to_dec","paddedText","commentStr","pad","charAt","random","padText","decrypt","text_hex","decryptType","key_decimal","bytes","AES","enc","Utf8","encrypt","raw_text","raw_key","encryptType","parser","padTag","maxLength","this","escapePadding","chunks","chunk","forEach","lchunk","paddedChunks","generatePadding","len","chunkArray","textArray","t","removePadding","encryptMultiLine","rawText","rawKey","encType","splitText","map","decryptMultiline","cipherText","CipherText","encryptionType","makeStyles","theme","root","width","backgroundColor","palette","background","paper","position","overflow","listSection","ul","padding","ListItemText","multiline","useStyles","margin","paddingBottom","marginLeft","SecretBox","updateSecret","secret","classes","className","noValidate","autoComplete","TextField","transitionDuration","inputProps","spellCheck","id","label","placeholder","onChange","event","target","flexGrow","spacing","maxWidth","reply","fontSize","aes","aesHolder","color","delete","titleHolder","marginTop","marginBottom","titleElements","avatar","green","theComment","overflowWrap","wordWrap","link","textDecoration","Comment","date","comment","handleDeleteComment","Paper","Grid","container","wrap","item","Avatar","variant","author","username","xs","to","Link","Typography","time","postTime","Date","Button","onClick","commentID","disabled","style","commentText","CommentContainer","comments","onDelete","dAppClient","DAppClient","name","syncWallet","console","log","requestPermissions","permissions","desyncWallet","clearActiveAccount","then","getActiveAccount","account","query","url","data","fetch","method","headers","Accept","body","JSON","stringify","res","json","LoadingIcon","height","justifyContent","alignContent","CircularProgress","Search","styled","borderRadius","shape","alpha","primary","contrastText","main","breakpoints","up","SearchIconWrapper","pointerEvents","display","alignItems","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","MyPopper","isOpen","clickAwayHandler","anchorEl","children","Popper","open","SearchBar","React","useState","setAnchorEl","results","setResults","loading","setLoading","Boolean","handleInput","success","handleClear","undefined","ClickAwayListener","onClickAway","currentTarget","onInput","sx","minWidth","border","Stack","component","menuButton","marginRight","title","logo","menu","MenuAppBar","auth","mobile","setMobile","wallet","setWallet","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","useEffect","currAccount","handleSync","handleUnsync","btnStyle","AppBar","Toolbar","IconButton","edge","aria-label","RouteLink","src","homeLogo","address","ok","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","textAlign","href","ImageCircle","props","imageLink","size","square","justifySelf","outline","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","image","img","maxHeight","avi","desc","usr","follow","icon","icon2","check","Bio","profile","currUser","canFollow","handleFollow","status","alert","message","Fragment","CardContent","pic","alt","bio","gutterBottom","loggedIn","isFollowing","borderColor","main3","expand","transform","duration","shortest","expandOpen","imgAVI","imgcir","card__actions","linkStyle","PostCard","Card","direction","postType","publicTopic","type","numComments","other","UserPosts","posts","setValue","FormControl","RadioGroup","row","aria-labelledby","FormControlLabel","control","Radio","post","md","xl","ConfirmDelete","handleDecision","handleClose","Dialog","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","wordBreak","submitBox","mainimg","aesType","Post","useRouteMatch","useParams","topic","postname","forumData","setForumData","setComments","setSecret","error","setError","helperText","setHelperText","openConfirmDelete","setOpenConfirmDelete","deleteCommentData","setDeleteCommentData","postCommentText","setPostCommentText","setEncType","encChecked","setEncChecked","toLowerCase","handleSubmitComment","ciphertext","forumID","newComment","CssBaseline","Container","decision","subtitle","toLocaleUpperCase","Switch","checked","fullWidth","holder","inline","top","paddingTop","FollowContainer","following","useHistory","user","lg","fetchGraphQL","operationsDoc","operationName","variables","queryCreatedOBJKTs","queryCollectedOBJKTs","queryOBJKTDetails","fetchCreatedOBJKTs","errors","hic_et_nunc_token","fetchCollectedOBJKTs","hic_et_nunc_token_holder","filter","token","creator","fetchOBJKTDetails","hic_et_nunc_token_by_pk","generateThumbnailCR","uri","default","verticalAlign","info","info2","LikedNFTs","NFTs","setNFTs","nft","sm","nftID","displayURI","TabPanel","index","hidden","Profile","deletePostData","setDeletePostData","createdPosts","setCreatedPosts","userData","setUserData","setFollowing","setObj","tab","setTab","tab2","setTab2","catch","err","handleChangeTab2","newTab","Tabs","indicatorColor","textColor","centered","Tab","settingsContainer","settingsItem","Public","setCreateBtnDisabled","setAvi","setBio","onSubmit","handleUploadFile","media","files","formdata","FormData","append","Authorization","accept","single","defaultChecked","startIcon","flexDirection","form","submit","left","bgcolor","boxShadow","p","setOpen","email","password","confirmPassword","stayLoggedIn","values","setValues","history","handleChange","prop","handleSubmit","setTimeout","required","Checkbox","Modal","Box","mt","Login","handleLogin","setUsername","setPassword","preventDefault","valid","redirect","credentials","res2","data2","input","withKey","encryptTitle","storeKey","allowOtherStoreKey","borderWidth","secondary","borderStyle","AutoGrid","document","FullWidthGrid","minHeight","div","encrypted1","char","setChar","userKey","setUserKey","xor","cipherTexts","randomSecrets","interval","setInterval","clearInterval","Array","fill","class","align","lineHeight","padEnd","MenuListProps","details","content","cover","controls","playIcon","overflowY","PublicPost","MediaControlCard","useTheme","topicPosts","setTopicPosts","createBtnDisabled","AlertDialog","state","handleClickOpen","setState","handleAgree","handleDisagree","Component","box","SimplePaper","emailToken","elevation","underline","BasicModal","collectedNFTs","setCollectedNFTs","createdNFTs","setCreatedNFTs","setDisplay","toggleDisplay","collected","created","display_uri","iframe","canvas","model","Media","mime","startsWith","right","LinearProgress","opacity","onLoadStart","artifact_uri","onLoad","modelHold","autoplay","auto-rotate","data-js-focus-visible","interaction-prompt","ar","ar-modes","camera-controls","ar-status","getHistory","objkt","trades","swaps","sort","timestamp","transaction","buyer","parseTransaction","HistoryList","columns","field","headerName","editable","renderCell","params","buyerAddr","Intl","DateTimeFormat","resolvedOptions","timeZone","HistoryGrid","rows","setRows","currPrice","parsed","sellerAddr","seller","price_tez","swap","price","price_usd","usd","toLocaleString","pageSize","rowsPerPageOptions","disableSelectionOnClick","footer","linked","addr","listStyleType","alertText","setNFT","nftOwners","setNftOwners","nftHistory","setNftHistory","isLiked","setIsLiked","likeCount","setLikeCount","handleToggleLike","likeStatus","commentData","count","fetchObjectHistory","objktHistory","token_holders","whiteSpace","description","owner","quantity","ImgMediaCard","CardMedia","CardActions","bin","bin2","WhiteText","withStyles","Footer","bottom","ScrollToTop","scrollTo","MatrixPage","createTheme","main2","hint","divider","typography","allVariants","fontFamily","themeMui","createThemeMui","App","loggedUser","setLoggedUser","setLogEvent","ThemeProvider","exact","path","Confirm","Matrix","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6e90d6be.chunk.js","sourcesContent":["/* global BigInt */\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nvar sha256 = function sha256(ascii) {\r\n  function rightRotate(value, amount) {\r\n    return (value >>> amount) | (value << (32 - amount));\r\n  }\r\n\r\n  var mathPow = Math.pow;\r\n  var maxWord = mathPow(2, 32);\r\n  var lengthProperty = \"length\";\r\n  var i, j; // Used as a counter across the whole file\r\n  var result = \"\";\r\n\r\n  var words = [];\r\n  var asciiBitLength = ascii[lengthProperty] * 8;\r\n\r\n  //* caching results is optional - remove/add slash from front of this line to toggle\r\n  // Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\r\n  // (we actually calculate the first 64, but extra values are just ignored)\r\n  var hash = (sha256.h = sha256.h || []);\r\n  // Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\r\n  var k = (sha256.k = sha256.k || []);\r\n  var primeCounter = k[lengthProperty];\r\n  /*/\r\n      var hash = [], k = [];\r\n      var primeCounter = 0;\r\n      //*/\r\n\r\n  var isComposite = {};\r\n  for (var candidate = 2; primeCounter < 64; candidate++) {\r\n    if (!isComposite[candidate]) {\r\n      for (i = 0; i < 313; i += candidate) {\r\n        isComposite[i] = candidate;\r\n      }\r\n      hash[primeCounter] = (mathPow(candidate, 0.5) * maxWord) | 0;\r\n      k[primeCounter++] = (mathPow(candidate, 1 / 3) * maxWord) | 0;\r\n    }\r\n  }\r\n\r\n  ascii += \"\\x80\"; // Append Ƈ' bit (plus zero padding)\r\n  while ((ascii[lengthProperty] % 64) - 56) ascii += \"\\x00\"; // More zero padding\r\n  for (i = 0; i < ascii[lengthProperty]; i++) {\r\n    j = ascii.charCodeAt(i);\r\n    if (j >> 8) return; // ASCII check: only accept characters in range 0-255\r\n    words[i >> 2] |= j << (((3 - i) % 4) * 8);\r\n  }\r\n  words[words[lengthProperty]] = (asciiBitLength / maxWord) | 0;\r\n  words[words[lengthProperty]] = asciiBitLength;\r\n\r\n  // process each chunk\r\n  for (j = 0; j < words[lengthProperty]; ) {\r\n    var w = words.slice(j, (j += 16)); // The message is expanded into 64 words as part of the iteration\r\n    var oldHash = hash;\r\n    // This is now the undefinedworking hash\", often labelled as variables a...g\r\n    // (we have to truncate as well, otherwise extra entries at the end accumulate\r\n    hash = hash.slice(0, 8);\r\n\r\n    for (i = 0; i < 64; i++) {\r\n      var i2 = i + j;\r\n      // Expand the message into 64 words\r\n      // Used below if\r\n      var w15 = w[i - 15],\r\n        w2 = w[i - 2];\r\n\r\n      // Iterate\r\n      var a = hash[0],\r\n        e = hash[4];\r\n      var temp1 =\r\n        hash[7] +\r\n        (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25)) + // S1\r\n        ((e & hash[5]) ^ (~e & hash[6])) + // ch\r\n        k[i] +\r\n        // Expand the message schedule if needed\r\n        (w[i] =\r\n          i < 16\r\n            ? w[i]\r\n            : (w[i - 16] +\r\n                (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15 >>> 3)) + // s0\r\n                w[i - 7] +\r\n                (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2 >>> 10))) | // s1\r\n              0);\r\n      // This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\r\n      var temp2 =\r\n        (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22)) + // S0\r\n        ((a & hash[1]) ^ (a & hash[2]) ^ (hash[1] & hash[2])); // maj\r\n\r\n      hash = [(temp1 + temp2) | 0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\r\n      hash[4] = (hash[4] + temp1) | 0;\r\n    }\r\n\r\n    for (i = 0; i < 8; i++) {\r\n      hash[i] = (hash[i] + oldHash[i]) | 0;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < 8; i++) {\r\n    for (j = 3; j + 1; j--) {\r\n      var b = (hash[i] >> (j * 8)) & 255;\r\n      result += (b < 16 ? 0 : \"\") + b.toString(16);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n// const sha256 = (ascii) => sjcl.hash.sha256.hash(ascii);\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// ASCII TO HEX\r\n// ------------------------------------------------------------------------------------------------------------------------\r\nfunction ascii_to_hexa(str) {\r\n  var arr1 = [];\r\n  for (var n = 0, l = str.length; n < l; n++) {\r\n    var hex = Number(str.charCodeAt(n)).toString(16);\r\n    arr1.push(hex);\r\n  }\r\n  return arr1.join(\"\");\r\n}\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// HEX TO DECIMAL\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// function hex_to_dec(s) {\r\n//   function add(x, y) {\r\n//     var c = 0,\r\n//       r = [];\r\n//     var x = x.split(\"\").map(Number);\r\n//     var y = y.split(\"\").map(Number);\r\n//     while (x.length || y.length) {\r\n//       var s = (x.pop() || 0) + (y.pop() || 0) + c;\r\n//       r.unshift(s < 10 ? s : s - 10);\r\n//       c = s < 10 ? 0 : 1;\r\n//     }\r\n//     if (c) r.unshift(c);\r\n//     return r.join(\"\");\r\n//   }\r\n\r\n//   var dec = \"0\";\r\n//   s.split(\"\").forEach(function (chr) {\r\n//     var n = parseInt(chr, 16);\r\n//     for (var t = 8; t; t >>= 1) {\r\n//       dec = add(dec, dec);\r\n//       if (n & t) dec = add(dec, \"1\");\r\n//     }\r\n//   });\r\n//   return dec;\r\n// }\r\n\r\nfunction hex_to_dec(s) {\r\n  const hex = \"0x\" + String(s);\r\n  return BigInt(hex).toString(10);\r\n}\r\n\r\nfunction dec_to_hex(bn) {\r\n  var base = 16;\r\n  var hex = BigInt(bn).toString(base);\r\n  if (hex.length % 2) {\r\n    hex = \"0\" + hex;\r\n  }\r\n  return hex;\r\n}\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// DECIMAL TO HEX\r\n// function dec_to_hex(str) {\r\n//   // .toString(16) only works up to 2^53\r\n//   var dec = str.toString().split(\"\"),\r\n//     sum = [],\r\n//     hex = [],\r\n//     i,\r\n//     s;\r\n//   while (dec.length) {\r\n//     s = 1 * dec.shift();\r\n//     for (i = 0; s || i < sum.length; i++) {\r\n//       s += (sum[i] || 0) * 10;\r\n//       sum[i] = s % 16;\r\n//       s = (s - sum[i]) / 16;\r\n//     }\r\n//   }\r\n//   while (sum.length) {\r\n//     hex.push(sum.pop().toString(16));\r\n//   }\r\n//   return hex.join(\"\");\r\n// }\r\n\r\n// function dec_to_hex(str) {\r\n//   return parseInt(str).toString(16);\r\n// }\r\n\r\n// ------------------------------------------------------------------------------------------------------------------------\r\n\r\n// HEX TO ASCII\r\nfunction hex_to_text(hexx) {\r\n  var hex = hexx.toString(); //force conversion\r\n  var str = \"\";\r\n  for (var i = 0; i < hex.length; i += 2)\r\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\r\n  return str;\r\n}\r\n\r\nfunction padText(commentStr) {\r\n  // use left padding with pipes on either side of comment\r\n  // determine length of string\r\n  let pad = \"\";\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < 64 - commentStr.length - 2; i++) {\r\n    // TODO: replace this insecure psuedorandom function with #crypto on node server instead\r\n    pad += characters.charAt(Math.random() * 62);\r\n  }\r\n  return `${pad}|${commentStr}|`;\r\n}\r\n\r\nfunction key_to_dec(key) {\r\n  return hex_to_dec(ascii_to_hexa(sha256(key)));\r\n}\r\n\r\nfunction dec_to_text(hex, key_dec) {\r\n  // const key_dec = hex_to_dec(ascii_to_hexa(sha256(key)));\r\n  const xOrd = BigInt(hex_to_dec(hex)) ^ BigInt(key_dec);\r\n  let text = hex_to_text(dec_to_hex(xOrd));\r\n  if (text.includes(\"|\")) {\r\n    text = text.split(\"|\")[1];\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction text_to_dec(text, key) {\r\n  let paddedText = padText(text);\r\n  let commentXorHex = dec_to_hex(\r\n    BigInt(hex_to_dec(ascii_to_hexa(paddedText))) ^ BigInt(key_to_dec(key))\r\n  );\r\n  return commentXorHex;\r\n}\r\n\r\nfunction decrypt(text_hex, key, decryptType = \"xor\") {\r\n  if (decryptType === \"xor\") {\r\n    try {\r\n      const key_decimal = key_to_dec(key);\r\n      return dec_to_text(text_hex, key_decimal);\r\n    } catch {\r\n      return text_hex;\r\n    }\r\n  } else if (decryptType === \"aes\") {\r\n    let bytes = CryptoJS.AES.decrypt(text_hex, sha256(key));\r\n    let decrypt;\r\n    try {\r\n      decrypt = bytes.toString(CryptoJS.enc.Utf8);\r\n      return decrypt || sha256(bytes.words.join(\"\"));\r\n    } catch {\r\n      return decrypt || sha256(bytes.words.join(\"\"));\r\n    }\r\n  } else {\r\n    return \"Error Could not decrypt\";\r\n  }\r\n}\r\n\r\nfunction encrypt(raw_text, raw_key, encryptType = \"xor\") {\r\n  // switch(encryptType){\r\n  //   case 'xor':\r\n\r\n  // }\r\n  if (encryptType === \"xor\") {\r\n    return text_to_dec(raw_text, raw_key);\r\n  } else if (encryptType === \"aes\") {\r\n    return CryptoJS.AES.encrypt(raw_text, sha256(raw_key)).toString();\r\n  } else {\r\n    return \"message not encrypted\";\r\n  }\r\n}\r\n\r\nclass Parser {\r\n  constructor(padTag, maxLength) {\r\n    if (padTag.length !== 2) {\r\n      throw \"Pad Tag string must be of length 2\";\r\n    }\r\n    this.padTag = padTag;\r\n    this.maxLength = maxLength;\r\n  }\r\n  splitText(text) {\r\n    text = this.escapePadding(text);\r\n    const chunks = [];\r\n    // loop through chars\r\n    let chunk = \"\";\r\n    let i = 0;\r\n    for (let char of text) {\r\n      chunk += char;\r\n      i++;\r\n      if (i >= this.maxLength) {\r\n        chunks.push(chunk);\r\n        chunk = \"\";\r\n        i = 0;\r\n      }\r\n    }\r\n\r\n    if (chunk.length) {\r\n      const lastChunks = this.pad(chunk);\r\n      lastChunks.forEach((lchunk) => chunks.push(lchunk));\r\n    }\r\n    return chunks;\r\n    // add text to chunk\r\n    // when we reach maxLength, add chunk to array\r\n    // return array\r\n  }\r\n  pad(text) {\r\n    // handle case where text + padTag is greater than 128 characters\r\n\r\n    const paddedChunks = [];\r\n    if ((text + this.padTag).length > this.maxLength) {\r\n      paddedChunks.push(`${text}${this.padTag[0]}`);\r\n      // add chunk with padding\r\n      paddedChunks.push(\r\n        `${this.padTag[1]}${this.generatePadding(this.maxLength - 1)}`\r\n      );\r\n    } else {\r\n      paddedChunks.push(\r\n        `${text}${this.padTag}${this.generatePadding(\r\n          this.maxLength - text.length - this.padTag.length\r\n        )}`\r\n      );\r\n    }\r\n    return paddedChunks;\r\n  }\r\n  generatePadding(len) {\r\n    let pad = \"\";\r\n    const characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < len; i++) {\r\n      // TODO: replace this insecure psuedorandom function with #crypto on node server instead\r\n      pad += characters.charAt(Math.random() * 62);\r\n    }\r\n    return pad;\r\n  }\r\n  isValid(text) {\r\n    return text.includes(this.padTag);\r\n  }\r\n  combine(chunkArray) {\r\n    return chunkArray.join(\"\");\r\n  }\r\n  removePadding(text) {\r\n    return text.split(this.padTag)[0];\r\n  }\r\n  escapePadding(text) {\r\n    return text.split(this.padTag).join(``);\r\n  }\r\n  parseText(textArray) {\r\n    let text = \"\";\r\n    textArray.forEach((t) => (text += t));\r\n    return this.removePadding(text);\r\n  }\r\n}\r\n\r\nconst parser = new Parser(\"&%\", 64);\r\n\r\n/**\r\n * @param {string} rawText - The text to be encrypted\r\n * @param {string} rawKey - The key to encrypt with\r\n * @param {string} encType - xor or aes - the type of encryption to use\r\n */\r\nfunction encryptMultiLine(rawText, rawKey, encType) {\r\n  // split text into chunks\r\n  if (encType === \"xor\") {\r\n    const textChunks = parser.splitText(rawText);\r\n    // encrypt each chunk\r\n    const encryptedChunks = textChunks.map((chunk) =>\r\n      encrypt(chunk, rawKey, encType)\r\n    );\r\n    // combine encrypted chunks with unique delimiter\r\n    return encryptedChunks.join(\"[newchunk]\");\r\n  } else {\r\n    return CryptoJS.AES.encrypt(rawText, sha256(rawKey)).toString();\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} cipherText - The text to be encrypted\r\n * @param {string} rawKey - The key to encrypt with\r\n * @param {string} encType - xor or aes - the type of encryption to use\r\n */\r\nconst decryptMultiline = function (cipherText, rawKey, encType) {\r\n  if (encType === \"xor\") {\r\n    // split strings into paddedChunks\r\n    const cipherChunks = cipherText.split(\"[newchunk]\");\r\n    // decrypt each chunk\r\n    const decryptedChunks = cipherChunks.map((chunk) =>\r\n      decrypt(chunk, rawKey, encType)\r\n    );\r\n    // remove padding\r\n    const strippedChunks = decryptedChunks.map((chunk) =>\r\n      parser.removePadding(chunk)\r\n    );\r\n    // join chunks into block of decrypted text\r\n    return strippedChunks.join(\"\");\r\n  } else if (encType === \"aes\") {\r\n    let bytes = CryptoJS.AES.decrypt(cipherText, sha256(rawKey));\r\n    let decrypt;\r\n    try {\r\n      decrypt = bytes.toString(CryptoJS.enc.Utf8);\r\n      return decrypt || sha256(bytes.words.join(\"\"));\r\n    } catch {\r\n      return decrypt || sha256(bytes.words.join(\"\"));\r\n    }\r\n  } else {\r\n    return cipherText;\r\n  }\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\n// export { sha256, ascii_to_hexa, hex_to_dec, dec_to_hex, hex_to_text };\r\nexport {\r\n  dec_to_text,\r\n  text_to_dec,\r\n  key_to_dec,\r\n  decrypt,\r\n  sleep,\r\n  encrypt,\r\n  encryptMultiLine,\r\n  decryptMultiline,\r\n};\r\n","import { decrypt, decryptMultiline } from \"../helpers/convert.js\";\r\nexport const CipherText = (text, key, encryptionType) => {\r\n  return decryptMultiline(text, key, encryptionType);\r\n};\r\n","// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import ListItem from \"@material-ui/core/ListItem\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\n// import { FixedSizeList } from \"react-window\";\r\n// import { CipherText } from \"./CipherText\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: \"100%\",\r\n//     height: \"auto\",\r\n//     maxheight: 200,\r\n//     maxWidth: 300,\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n// }));\r\n\r\n// function renderRow(props) {\r\n//   const { index, style, comments } = props;\r\n//   return comments.map((comment) => {\r\n//     <ListItem button style={style} key={index}>\r\n//       <ListItemText primary={comment} />\r\n//     </ListItem>;\r\n//   });\r\n//   // return (\r\n//   //   <ListItem button style={style} key={index}>\r\n//   //     <ListItemText primary={`Item ${index + 1}`} />\r\n//   //   </ListItem>\r\n//   // );\r\n// }\r\n\r\n// renderRow.propTypes = {\r\n//   index: PropTypes.number.isRequired,\r\n//   style: PropTypes.object.isRequired,\r\n//   comments: PropTypes.array.isRequired,\r\n// };\r\n\r\n// export default function MiniThread({ comments }) {\r\n//   const classes = useStyles();\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       {/* <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}>\r\n//         {comments.map((comment, i) => {\r\n//           <ListItem button key={i}>\r\n//             <ListItemText primary={comment} />\r\n//           </ListItem>;\r\n//         })}\r\n//       </FixedSizeList> */}\r\n//       {comments.map((comment, i) => {\r\n//         return (\r\n//           <ListItem button key={i}>\r\n//             <ListItemText primary={CipherText(comment.text, \"default_key\")} />\r\n//           </ListItem>\r\n//         );\r\n//       })}\r\n//       {/* {comments.map((comment, i) => {\r\n//         return (\r\n//           <div button key={i}>\r\n//             {comment.text}\r\n//           </div>\r\n//         );\r\n//       })} */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { CipherText } from \"./CipherText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    overflow: \"auto\",\r\n    // maxHeight: 500,\r\n    overflow: \"hidden\",\r\n  },\r\n  listSection: {\r\n    backgroundColor: \"inherit\",\r\n  },\r\n  ul: {\r\n    backgroundColor: \"inherit\",\r\n    padding: 0,\r\n  },\r\n  ListItemText: {\r\n    multiline: true,\r\n  },\r\n}));\r\n\r\nexport default function MiniThread({ comments, secret }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <List dense={true} className={classes.root} subheader={<li />}>\r\n      {[0].map((sectionId) => (\r\n        <li key={`section-${sectionId}`} className={classes.listSection}>\r\n          <ul className={classes.ul}>\r\n            <ListSubheader>{`Comments`}</ListSubheader>\r\n            {comments.map((comment, i) => (\r\n              <div\r\n                key={`${i}-${sectionId}-${comment.author || comment.username}`}\r\n              >\r\n                <ListItem\r\n                  key={`item-${sectionId}-${\r\n                    comment.author || comment.username\r\n                  }`}\r\n                >\r\n                  <ListItemText\r\n                    primary={`${comment.author || \"\"}`}\r\n                    secondary={`${CipherText(\r\n                      comment.text || comment.commentText,\r\n                      secret || \"default_key\"\r\n                    )}`}\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      // margin: theme.spacing(1),\r\n      margin: \"auto\",\r\n      paddingBottom: 0,\r\n      width: \"25ch\",\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SecretBox({ updateSecret, secret }) {\r\n  const classes = useStyles();\r\n  // const [value, setValue] = React.useState(\"Controlled\");\r\n\r\n  const handleChange = (event) => {\r\n    // setValue(event.target.value);\r\n    // console.log(value);\r\n    updateSecret(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField\r\n          transitionDuration={50}\r\n          inputProps={{ spellCheck: \"false\" }}\r\n          id=\"outlined-textarea\"\r\n          label=\"Secret Key\"\r\n          placeholder=\"Secret Key\"\r\n          multiline\r\n          // variant=\"outlined\"\r\n          value={secret}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useState } from \"react\";\r\nimport { useParams, useRouteMatch } from \"react-router\";\r\nimport { CipherText } from \"../components/CipherText\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport SecretBox from \"../components/SecretBox\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { Link } from \"@material-ui/core\";\r\n// import LoadingIcon from \"../components/LoadingPageIcon\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 1200,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n  reply: {\r\n    fontSize: 10,\r\n    padding: 0,\r\n  },\r\n  aes: {\r\n    fontSize: 10,\r\n    padding: 0,\r\n    backgroundColor: \"black\",\r\n    marginLeft: 5,\r\n  },\r\n  aesHolder: {\r\n    fontSize: 11.5,\r\n    color: \"yellow\",\r\n  },\r\n  delete: {\r\n    // marginLeft: 10,\r\n    fontSize: 10,\r\n    padding: 0,\r\n  },\r\n  titleHolder: {\r\n    maxWidth: 1500,\r\n    marginTop: 25,\r\n    padding: 20,\r\n    marginBottom: 50,\r\n  },\r\n  titleElements: {\r\n    padding: 5,\r\n  },\r\n  avatar: {\r\n    backgroundColor: green[500],\r\n  },\r\n  theComment: {\r\n    overflowWrap: \"anywhere\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  link: {\r\n    margin: \"1rem\",\r\n    textDecoration: \"none\",\r\n\r\n    color: \"blue\",\r\n  },\r\n}));\r\n\r\nexport const Comment = ({ comment, secret, handleDeleteComment }) => {\r\n  const classes = useStyles();\r\n  const convertTimeToLocal = function (date) {\r\n    const time = new Date(date + \" UTC\");\r\n    return time.toString();\r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container wrap=\"nowrap\" spacing={1}>\r\n        <Grid item>\r\n          <Avatar className={classes.avatar} variant=\"rounded\" color=\"green\">\r\n            {(comment.author || comment.username).slice(0, 1)}\r\n          </Avatar>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Grid>\r\n            {\r\n              <RouteLink\r\n                to={`/@${comment.author || comment.username}`}\r\n                className={classes.link}\r\n              >\r\n                <Link> @{comment.author || comment.username} </Link>\r\n              </RouteLink>\r\n            }\r\n            <Typography variant=\"caption\">\r\n              {convertTimeToLocal(comment.time || comment.postTime)}{\" \"}\r\n            </Typography>\r\n            <Button variant=\"outlined\" className={classes.reply}>\r\n              Reply\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.reply}\r\n              onClick={handleDeleteComment(comment.id || comment.commentID)}\r\n            >\r\n              Delete\r\n            </Button>\r\n            {comment.encryptionType === \"aes\" ? (\r\n              <Button\r\n                disabled=\"true\"\r\n                variant=\"outlined\"\r\n                className={classes.aes}\r\n              >\r\n                <Typography className={classes.aesHolder}>AES</Typography>\r\n                <VpnKeyIcon\r\n                  style={{ fontSize: \"1vw\", color: \"yellow\", marginLeft: \"5\" }}\r\n                />\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Typography className={classes.theComment} variant=\"body2\">\r\n            {CipherText(\r\n              comment.text || comment.commentText,\r\n              secret || \"default_key\",\r\n              comment.encryptionType || \"xor\"\r\n            )}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n","import Container from \"@material-ui/core/Container\";\r\nimport MiniThread from \"./MiniThread\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Comment } from \"./Comment\";\r\nexport const CommentContainer = ({ comments, secret, onDelete }) => {\r\n  return (\r\n    <Grid>\r\n      {/* Comments by this user\r\n      <MiniThread comments={comments} secret={secret} /> */}\r\n      {comments?.map((comment) => (\r\n        <Comment comment={comment} secret={secret} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.4666ffc7.svg\";","import { DAppClient } from \"@airgap/beacon-sdk\";\r\n\r\nconst dAppClient = new DAppClient({ name: \"Wallet Sync\" });\r\n\r\nconst syncWallet = async function () {\r\n  try {\r\n    console.log(\"Requesting permissions...\");\r\n    const permissions = await dAppClient.requestPermissions();\r\n    return permissions;\r\n  } catch (error) {\r\n    console.log(\"Got error:\", error);\r\n  }\r\n};\r\n\r\nconst desyncWallet = async function () {\r\n  dAppClient.clearActiveAccount().then(async () => {\r\n    const account = await dAppClient.getActiveAccount();\r\n    console.log(\"Active Account\", account);\r\n  });\r\n};\r\n\r\nconst getActiveAccount = async function () {\r\n  return await dAppClient.getActiveAccount();\r\n};\r\n\r\nexport { syncWallet, desyncWallet, getActiveAccount };\r\n","const query = async function (url, data = null) {\r\n  const res = await fetch(url, {\r\n    method: data ? \"POST\" : \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: data && JSON.stringify(data),\r\n  });\r\n  return await res.json();\r\n};\r\n\r\nexport { query };\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Grid } from \"@material-ui/core\";\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     height: \"30rem\",\r\n//     display: \"flex\",\r\n//     \"& > * + *\": {\r\n//       margin: \"auto\",\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default function LoadingIcon({ height }) {\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      style={{ height: height }}\r\n      justifyContent=\"center\"\r\n      alignContent=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Popper from \"@mui/material/Popper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport { ClickAwayListener, Paper, Stack, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { query } from \"../helpers/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Link as MUILink } from \"@mui/material\";\r\nimport LoadingIcon from \"./LoadingPageIcon\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  color: \"#00e019\",\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.primary.contrastText, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"#00e019\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"15ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst MyPopper = ({ isOpen, clickAwayHandler, anchorEl, children }) => (\r\n  <Popper open={true} anchorEl={anchorEl}>\r\n    {children}\r\n  </Popper>\r\n);\r\n\r\nconst SearchBar = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const clickAwayHandler = () => setAnchorEl(null);\r\n  const clickHandler = (e) => {\r\n    console.log(open);\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n  const handleInput = async (e) => {\r\n    setResults([]);\r\n    setLoading(true);\r\n    console.log(e.target.value);\r\n    if (!e.target.value?.length) {\r\n      setLoading(false);\r\n\r\n      return;\r\n    }\r\n    // send request to api with search in query\r\n    const data = await query(`/api/search?value=${e.target.value}`);\r\n    if (data.success) {\r\n      setResults(data.results);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handleClear = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const id = open ? \"simple-popper\" : undefined;\r\n  return (\r\n    <ClickAwayListener onClickAway={clickAwayHandler}>\r\n      <div>\r\n        <Search onClick={clickHandler}>\r\n          <SearchIconWrapper>\r\n            <SearchIcon />\r\n          </SearchIconWrapper>\r\n          <StyledInputBase\r\n            onInput={handleInput}\r\n            placeholder=\"Search Users...\"\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </Search>\r\n        {open && (\r\n          <MyPopper\r\n            id={id}\r\n            {...{ clickAwayHandler, isOpen: open }}\r\n            anchorEl={anchorEl}\r\n          >\r\n            <Paper\r\n              className=\"popper\"\r\n              sx={{ minWidth: 200, padding: 1, border: \"1px solid\" }}\r\n            >\r\n              <Typography>Results</Typography>\r\n              <Stack spacing={1}>\r\n                {loading && <LoadingIcon />}\r\n                {results.map((res) => (\r\n                  <Box\r\n                    sx={{\r\n                      padding: 1,\r\n                      \"&:hover\": {\r\n                        backgroundColor: \"#003300\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MUILink\r\n                      component={Link}\r\n                      to={`/@${res.username}`}\r\n                      onClick={handleClear}\r\n                    >\r\n                      <Box sx={{}}>{res.username}</Box>\r\n                    </MUILink>\r\n                  </Box>\r\n                ))}\r\n              </Stack>\r\n            </Paper>\r\n          </MyPopper>\r\n        )}\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { useState, useLayoutEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Breadcrumb from \"./Breadcrum\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport SyncIcon from \"@mui/icons-material/Sync\";\r\nimport SyncDisabledIcon from \"@mui/icons-material/SyncDisabled\";\r\nimport AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { SvgIcon } from \"@material-ui/core\";\r\nimport homeLogo from \"../logo.svg\";\r\n\r\nimport { Box, Divider } from \"@mui/material\";\r\nimport {\r\n  syncWallet,\r\n  desyncWallet,\r\n  getActiveAccount,\r\n} from \"../helpers/wallet.js\";\r\nimport { useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 1,\r\n    border: \"none\",\r\n    backgroundColor: theme.palette.primary.contrastText,\r\n    // backgroundColor: \"#000000\",\r\n    // borderStyle: \"solid\",\r\n    // borderRadius: \"10px\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  logo: {\r\n    width: 50,\r\n    marginTop: 0,\r\n  },\r\n  menu: {\r\n    marginTop: 60,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar({ auth }) {\r\n  const [mobile, setMobile] = useState(false);\r\n  const [wallet, setWallet] = useState({});\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setMobile(window.innerWidth < 1000);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    const currAccount = await getActiveAccount();\r\n    setWallet(currAccount || {});\r\n  }, []);\r\n  // const { innerWidth, innerHeight } = window;\r\n  const classes = useStyles();\r\n  // const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const preventDefault = (event) => event.preventDefault();\r\n  // const handleChange = (event) => {\r\n  //   setAuth(event.target.checked);\r\n  // };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSync = async () => {\r\n    const permissions = await syncWallet();\r\n    if (permissions) {\r\n      setWallet(permissions);\r\n    }\r\n  };\r\n  const handleUnsync = async () => {\r\n    desyncWallet();\r\n    setWallet({});\r\n  };\r\n\r\n  const btnStyle = \"text\";\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={auth}\r\n              onChange={handleChange}\r\n              aria-label=\"login switch\"\r\n            />\r\n          }\r\n          label={auth ? \"Logout\" : \"Login\"}\r\n        />\r\n      </FormGroup> */}\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.root}>\r\n          {!mobile && (\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"primary\"\r\n              aria-label=\"menu\"\r\n            >\r\n              {/* <MenuIcon /> */}\r\n            </IconButton>\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.title}\r\n            color=\"primary\"\r\n            component={RouteLink}\r\n            to=\"/\"\r\n          >\r\n            <img className={classes.logo} src={homeLogo} />\r\n            {/* <Button></Button> */}\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Button\r\n              variant={btnStyle}\r\n              color=\"primary\"\r\n              component={RouteLink}\r\n              to=\"/public\"\r\n            >\r\n              {mobile || \"Public Topics\"}\r\n              {mobile && <PublicIcon />}\r\n            </Button>\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Button\r\n              variant={btnStyle}\r\n              color=\"primary\"\r\n              component={RouteLink}\r\n              to=\"/help\"\r\n            >\r\n              {mobile || \"Help\"}\r\n              {mobile && <HelpIcon />}\r\n            </Button>\r\n          </Typography>\r\n          {mobile || <SearchBar className={classes.title} />}\r\n          {mobile || <Box sx={{ width: 100 }}></Box>}\r\n          {wallet.address ? (\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Button\r\n                variant={btnStyle}\r\n                color=\"primary\"\r\n                component={RouteLink}\r\n                to={`/tz/${wallet.address}`}\r\n              >\r\n                {mobile || wallet.address}\r\n                {mobile && <MonetizationOnIcon />}\r\n              </Button>\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Button variant={btnStyle} color=\"primary\" onClick={handleSync}>\r\n                {mobile || \"Sync\"}\r\n                {/* {mobile && } */}\r\n                <SyncIcon />\r\n              </Button>\r\n            </Typography>\r\n          )}\r\n          {wallet.address && (\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Button variant={btnStyle} color=\"primary\" onClick={handleUnsync}>\r\n                {mobile || \"Unsync\"}\r\n                <SyncDisabledIcon />\r\n              </Button>\r\n            </Typography>\r\n          )}\r\n          {auth.ok && !mobile && (\r\n            <Typography color=\"primary\" variant=\"h6\">\r\n              @{auth.username}\r\n            </Typography>\r\n          )}\r\n          {Boolean(auth.ok) && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"primary\"\r\n              >\r\n                <AccountCircle color=\"primary\" />\r\n              </IconButton>\r\n\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                className={classes.menu}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem\r\n                  key={1}\r\n                  component={RouteLink}\r\n                  to={`/@${auth.username}`}\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Profile\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem key={2} component={RouteLink} to=\"/settings\">\r\n                  Settings\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem key={3} component={Link} href={\"/logout\"}>\r\n                  Logout\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          {Boolean(auth.ok) || (\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Button\r\n                variant={btnStyle}\r\n                color=\"primary\"\r\n                component={RouteLink}\r\n                to=\"/login\"\r\n              >\r\n                {mobile || \"Login / Signup\"}\r\n                {mobile && <SupervisedUserCircleIcon color=\"primary\" />}\r\n              </Button>\r\n            </Typography>\r\n          )}\r\n          {/* <Typography variant=\"h6\" className={classes.title}>\r\n            <Breadcrumb\r\n              locations={[\"Cipherforums\", \"Users\", \"Posts\", \"MyPost\"]}\r\n            />\r\n          </Typography> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\n// import sillouette from \"../images/sillouette.png\";\r\n\r\nfunction ImageCircle(props) {\r\n  const { children, imageLink, size, marginLeft, square } = props;\r\n  return (\r\n    <Box\r\n      // onMouseEnter={() => setShowDeleteButton(true)}\r\n      // onMouseLeave={() => setShowDeleteButton(false)}\r\n      style={{\r\n        backgroundColor: \"rgb(0,0,0,0)\",\r\n        // alignSelf: \"center\",\r\n        // marginTop: -25,\r\n        marginLeft: marginLeft,\r\n        // verticalAlign: \"middle\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        background: \"#ffffff\",\r\n        width: size,\r\n        height: size,\r\n        borderRadius: square ? \"0%\" : \"50%\",\r\n        display: \"flex\",\r\n        overflow: \"hidden\",\r\n        padding: -1,\r\n        outline: 0,\r\n        transition: \"all 0.5s ease\",\r\n        backgroundImage: `url(${imageLink ? imageLink : \" \"})`,\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n        justifyContent: \"center\",\r\n        textDecoration: \"none\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ImageCircle;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport LoadingIcon from \"./LoadingPageIcon\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageCircle from \"./ImageCircle\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 1600,\r\n    marginLeft: 0,\r\n    marginTop: 30,\r\n    // height: 200,\r\n    minWidth: 300,\r\n    // padding: 5,\r\n    display: \"block\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"inline-flex\",\r\n    maxWidth: 100,\r\n    maxHeight: 100,\r\n  },\r\n  avi: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\",\r\n    // marginRight: 20,\r\n  },\r\n  desc: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\",\r\n    // padding: 10,\r\n  },\r\n  // avatar: {\r\n  //   width: 100,\r\n  //   height: 100,\r\n  //   backgroundColor: theme.palette.background.paper,\r\n  // },\r\n  usr: {\r\n    display: \"inline-flex\",\r\n    // marginTop: 10,y\r\n\r\n    // padding: 10,\r\n    marginLeft: 20,\r\n  },\r\n  follow: {\r\n    marginLeft: 20,\r\n  },\r\n  icon: {\r\n    margin: 5,\r\n    marginLeft: 10,\r\n  },\r\n  icon2: {\r\n    margin: 5,\r\n    marginLeft: 0,\r\n  },\r\n  check: {\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default function Bio({ profile, currUser, canFollow }) {\r\n  const classes = useStyles();\r\n  const handleFollow = async () => {\r\n    const res = await fetch(\"/api/following\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: profile?.username,\r\n      }),\r\n    });\r\n    if (!res || res.status !== 200) {\r\n      throw \"error following\";\r\n      return;\r\n    }\r\n    const data = await res.json();\r\n    if (!data.success) {\r\n      return alert(data.message);\r\n    }\r\n    alert(data.message);\r\n    canFollow = false;\r\n  };\r\n  //   const [profile, setProfile] = useState(user);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} className={classes.root}>\r\n        {profile?.username ? (\r\n          <div>\r\n            <Grid item xs={12}>\r\n              <CardContent className={classes.desc}>\r\n                {/* <Card className={classes.avi}>\r\n                <img\r\n                  className={classes.img}\r\n                  alt=\"complex\"\r\n                  src={profile?.pic || \"https://i.imgur.com/jlZySn6.jpeg\"}\r\n                />\r\n              </Card>\r\n              avatar= */}\r\n                {profile?.pic ? (\r\n                  <ImageCircle\r\n                    imageLink={profile.pic}\r\n                    size={150}\r\n                    alt={profile.username}\r\n                    square\r\n                  ></ImageCircle>\r\n                ) : (\r\n                  <Avatar>{profile.username.slice(0, 2)}</Avatar>\r\n                )}\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {profile?.bio || \"this user has no bio\"}\r\n                  </Typography>\r\n                </CardContent>\r\n\r\n                {/* <Card className={classes.avi}> */}\r\n\r\n                {/* </Card> */}\r\n              </CardContent>\r\n            </Grid>\r\n          </div>\r\n        ) : (\r\n          <LoadingIcon height={\"10rem\"} />\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.usr}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          @{profile?.username || \"user not found\"}\r\n          {profile?.currUser ||\r\n            (profile?.loggedIn &&\r\n              (!profile?.isFollowing ? (\r\n                <Button\r\n                  className={classes.follow}\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  onClick={handleFollow}\r\n                >\r\n                  Follow\r\n                </Button>\r\n              ) : (\r\n                <Typography\r\n                  className={classes.check}\r\n                  gutterBottom\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                >\r\n                  ✔\r\n                </Typography>\r\n              )))}\r\n          {currUser ? (\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              component={RouteLink}\r\n              to=\"/settings\"\r\n            >\r\n              edit\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Typography>\r\n        <TwitterIcon className={classes.icon} />\r\n        <LanguageIcon className={classes.icon2} />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport MiniThread from \"./MiniThread\";\r\nimport LoadingIcon from \"./LoadingPageIcon\";\r\nimport { Grid, Link, Toolbar } from \"@material-ui/core\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport ImageCircle from \"./ImageCircle\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport Box from \"@mui/material/Box\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: \"99vw\",\r\n\r\n    // marginBottom: \"3%\",\r\n    padding: 10,\r\n    // height: 350,\r\n    margin: 10,\r\n    textAlign: \"left\",\r\n    border: \"1px solid\",\r\n    borderColor: theme.palette.primary.main3,\r\n  },\r\n  // media: {\r\n  //   height: 0,\r\n  //   paddingTop: \"56.25%\", // 16:9\r\n  // },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: green[500],\r\n  },\r\n  img: {\r\n    // paddingTop: \"10%\", // 16:9\r\n    // paddingBottom: \"5%\",\r\n    paddingLeft: \"1%\", // 16:9\r\n    // padding: \"10%\",\r\n    // maxWidth: 250,\r\n    // maxHeight: 50,\r\n    // width: \"10vw\",\r\n    // height: \"20%\",\r\n    // objectFit: \"cover\",\r\n    // maxHeight: 300,\r\n  },\r\n  imgAVI: {\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  imgcir: {\r\n    marginLeft: 140,\r\n  },\r\n  delete: {},\r\n  card__actions: {\r\n    marginLeft: 20,\r\n  },\r\n}));\r\nconst linkStyle = {\r\n  margin: \"1rem\",\r\n  textDecoration: \"none\",\r\n  color: \"blue\",\r\n};\r\n\r\nexport default function PostCard({ data, secret, onDelete }) {\r\n  // console.log(data);\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [forumData, setForumData] = React.useState();\r\n\r\n  const handleDelete = function (e) {\r\n    onDelete(data);\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    // check if data already exists\r\n    if (!forumData) {\r\n      fetch(`/api/threads/${data.publicTopic}/${data.url}`)\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          setForumData(result);\r\n        });\r\n    }\r\n    console.log(data);\r\n    // load in data if not\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    // <Card className={classes.root} id={data.id}>\r\n    //   <CardActionArea\r\n    //     component={RouteLink}\r\n    // to={`/${\r\n    //   data.postType == \"public\"\r\n    //     ? `public/${data.publicTopic}`\r\n    //     : \"@\" + data.username\r\n    // }/${data.url}`}\r\n    //   >\r\n    //     <CardHeader\r\n    //       title={data.url.slice(0, -5) + \" to \" + data.publicTopic}\r\n    //       to={\"/\"}\r\n    //       subheader={data.creationDate}\r\n    //     />\r\n    //     <CardMedia className={classes.imgcir}>\r\n    //       {data.image ? (\r\n    //         <ImageCircle\r\n    //           imageLink={data.image}\r\n    //           size={180}\r\n    //           alt={\"error\"}\r\n    //           square\r\n    //         ></ImageCircle>\r\n    //       ) : (\r\n    //         <CardContent>\r\n    //           <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n    //             {data.subtitle}\r\n    //           </Typography>\r\n    //         </CardContent>\r\n    //       )}\r\n    //       <br></br>\r\n    //     </CardMedia>\r\n    //   </CardActionArea>\r\n\r\n    //   <CardActions disableSpacing>\r\n    //     <IconButton\r\n    //       onClick={handleDelete}\r\n    //       color=\"primary\"\r\n    //       aria-label=\"share\"\r\n    //       className={classes.delete}\r\n    //     >\r\n    //       <DeleteForeverRoundedIcon />\r\n    //     </IconButton>\r\n    //   </CardActions>\r\n    // </Card>\r\n    <Card className={classes.root} id={data.id}>\r\n      <Box sx={4}>\r\n        {/* <div className={classes.details}> */}\r\n        <Stack spacing={1} direction=\"row\">\r\n          <RouteLink\r\n            to={`/${\r\n              data.postType == \"public\"\r\n                ? `public/${data.publicTopic}`\r\n                : \"@\" + data.username\r\n            }/${data.url}`}\r\n            style={linkStyle}\r\n          >\r\n            <Link>\r\n              <div className={classes.img}>\r\n                <ImageCircle\r\n                  imageLink={data.image || \"https://i.imgur.com/Ck4MLYV.jpg\"}\r\n                  size={150}\r\n                  square\r\n                ></ImageCircle>\r\n                {/* <CardMedia\r\n                  component=\"img\"\r\n                  height=\"300\"\r\n                  image={data.image || \"https://i.imgur.com/Ck4MLYV.jpg\"}\r\n                /> */}\r\n              </div>\r\n            </Link>\r\n          </RouteLink>\r\n          {/* </Stack> */}\r\n          <Stack spacing={1} direction=\"column\" justifyContent=\"space-between\">\r\n            <Stack spacing={1} direction=\"row\" padding={1}>\r\n              {/* <CardContent className={classes.content}> */}\r\n              {/* <Typography variant=\"caption\">@{data.username}</Typography> */}\r\n              <RouteLink\r\n                to={`/${\r\n                  data.postType == \"public\"\r\n                    ? `public/${data.publicTopic}`\r\n                    : \"@\" + data.username\r\n                }/${data.url}`}\r\n                style={linkStyle}\r\n              >\r\n                <Link>\r\n                  <Typography variant=\"body2\" className={classes.type}>\r\n                    {data.url.slice(0, -5)}\r\n                  </Typography>\r\n                </Link>\r\n              </RouteLink>\r\n              {/* </CardContent> */}\r\n            </Stack>\r\n            {/* </div> */}\r\n            <Stack\r\n              direction=\"row\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"flex-end\"\r\n              spacing={0}\r\n              padding={0}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                  onClick={handleDelete}\r\n                  color=\"primary\"\r\n                  aria-label=\"share\"\r\n                  className={classes.delete}\r\n                >\r\n                  <DeleteForeverRoundedIcon />\r\n                </IconButton>\r\n                <FavoriteBorderIcon></FavoriteBorderIcon>\r\n                {/* <FavoriteIcon></FavoriteIcon> */}\r\n                <Typography className={classes.card__actions} variant=\"caption\">\r\n                  {data.numComments} comments\r\n                </Typography>\r\n              </Toolbar>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function PostCardNew({ data, secret, onDelete }) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Shrimp and Chorizo Paella\"\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"194\"\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        alt=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook\r\n          together with your guests. Add 1 cup of frozen peas along with the\r\n          mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon color=\"primary\" />\r\n        </IconButton>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon color=\"primary\" />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and\r\n            set aside for 10 minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet\r\n            over medium-high heat. Add chicken, shrimp and chorizo, and cook,\r\n            stirring occasionally until lightly browned, 6 to 8 minutes.\r\n            Transfer shrimp to a large plate and set aside, leaving chicken and\r\n            chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes,\r\n            onion, salt and pepper, and cook, stirring often until thickened and\r\n            fragrant, about 10 minutes. Add saffron broth and remaining 4 1/2\r\n            cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and\r\n            peppers, and cook without stirring, until most of the liquid is\r\n            absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved\r\n            shrimp and mussels, tucking them down into the rice, and cook again\r\n            without stirring, until mussels have opened and rice is just tender,\r\n            5 to 7 minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then\r\n            serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n// import Post from \"./Post-OLD\";\r\nimport PostCard from \"./PostCard\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Box, Stack } from \"@mui/material\";\r\nimport PostCardNew from \"./PostCardNew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    width: \"90vw\",\r\n    // display: \"inline-flex\",\r\n    // flexWrap: \"wrap\",\r\n    // textAlign: \"center\",\r\n    // marginLeft: -50,\r\n    // overflowWrap: \"break-word\",\r\n  },\r\n  // paper: {\r\n  //   padding: theme.spacing(2),\r\n  //   margin: \"auto\",\r\n  //   maxWidth: 500,\r\n  // },\r\n  // image: {\r\n  //   width: 128,\r\n  //   height: 128,\r\n  // },\r\n  // img: {\r\n  //   margin: \"auto\",\r\n  //   display: \"block\",\r\n  //   maxWidth: \"100%\",\r\n  //   maxHeight: \"100%\",\r\n  //   padding: \"10px\",\r\n  // },\r\n}));\r\n\r\nexport default function UserPosts({ posts, secret, onDelete }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(\"grid\");\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n  //   const [createdPosts, setCreatedPosts] = useState(posts);\r\n  return (\r\n    <div className={classes.root} sx={{ width: \"90vw\" }}>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FormControl>\r\n          <RadioGroup\r\n            row\r\n            aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n            name=\"row-radio-buttons-group\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <FormControlLabel value=\"grid\" control={<Radio />} label=\"Grid\" />\r\n            <FormControlLabel value=\"list\" control={<Radio />} label=\"List\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Box>\r\n      <Grid container spacing={2}>\r\n        {posts\r\n          ? posts.map((post, i) => (\r\n              <Grid\r\n                key={i}\r\n                item\r\n                xs={12}\r\n                md={value == \"list\" ? 12 : 4}\r\n                xl={value == \"list\" ? 12 : 4}\r\n              >\r\n                <PostCard secret={secret} data={post} onDelete={onDelete} />\r\n              </Grid>\r\n            ))\r\n          : \"No Posts for this user\"}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nconst ConfirmDelete = ({ open, data, handleDecision, handleClose }) => {\r\n  return (\r\n    <div>\r\n      {/* Button to trigger the opening of the dialog */}\r\n      {/* <Button onClick={this.handleClickOpen}>Delete this</Button> */}\r\n      {/* Dialog that is displayed if the state open is true */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDecision(\"disagree\")} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDecision(\"agree\")} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDelete;\r\n","import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useState } from \"react\";\r\nimport { Route, useParams, useRouteMatch } from \"react-router\";\r\nimport { CipherText } from \"../components/CipherText\";\r\nimport SecretBox from \"../components/SecretBox\";\r\nimport LoadingIcon from \"../components/LoadingPageIcon\";\r\nimport { Comment } from \"../components/Comment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { decrypt, encrypt, encryptMultiLine } from \"../helpers/convert\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport ConfirmDelete from \"../components/ConfirmDelete\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0, 3),\r\n    wordBreak: \"break-all\",\r\n  },\r\n\r\n  paper: {\r\n    maxWidth: 1200,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n  reply: {\r\n    fontSize: 10,\r\n    padding: 0,\r\n  },\r\n  titleHolder: {\r\n    maxWidth: 1500,\r\n    marginTop: 25,\r\n    padding: 20,\r\n    marginBottom: 50,\r\n  },\r\n  titleElements: {\r\n    padding: 5,\r\n  },\r\n  comment: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n  },\r\n  submitBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 10,\r\n    marginBottom: 50,\r\n  },\r\n  mainimg: {\r\n    maxWidth: 300,\r\n  },\r\n  aesType: {\r\n    fontSize: 15,\r\n    color: theme.palette.primary,\r\n  },\r\n}));\r\nconst linkStyle = {\r\n  margin: \"1rem\",\r\n  textDecoration: \"none\",\r\n  color: \"blue\",\r\n};\r\nconst message = `Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. `;\r\n\r\nexport default function Post() {\r\n  let match = useRouteMatch();\r\n  let { topic, postname, username } = useParams();\r\n  const classes = useStyles();\r\n  const [forumData, setForumData] = useState();\r\n  const [comments, setComments] = useState();\r\n  const [secret, setSecret] = useState();\r\n  const [error, setError] = useState(false);\r\n  const [helperText, setHelperText] = useState(\"\");\r\n  const [openConfirmDelete, setOpenConfirmDelete] = useState(false);\r\n  const [deleteCommentData, setDeleteCommentData] = useState({});\r\n  const [postCommentText, setPostCommentText] = useState(\"\");\r\n  const [encType, setEncType] = useState(\"xor\");\r\n\r\n  const [encChecked, setEncChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/threads/${topic || username}/${postname}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.success) {\r\n          // handle error in request\r\n        }\r\n        console.log(data);\r\n        setComments(data.comments);\r\n        setForumData(data);\r\n        setSecret(data.publicTopic?.toLowerCase() || \"\");\r\n      });\r\n  }, [postname]);\r\n\r\n  const handleChangeEnc = (event) => {\r\n    setEncChecked(event.target.checked);\r\n    setEncType(event.target.checked ? \"aes\" : \"xor\");\r\n  };\r\n\r\n  const updateSecret = function (secret) {\r\n    setSecret(secret);\r\n  };\r\n  const handleSubmitComment = async (e) => {\r\n    if (!postCommentText.length) {\r\n      setError(true);\r\n      setHelperText(\"Your comment has no text\");\r\n      return;\r\n    }\r\n    if (!secret) {\r\n      setError(true);\r\n      setHelperText(\"You must type a secret key above\");\r\n      return;\r\n    }\r\n    // if (postCommentText.length > 64) {\r\n    //   console.log(postCommentText.length < 64);\r\n    //   setError(true);\r\n    //   setHelperText(\"Comment must be shorter than 64 characters\");\r\n    //   return;\r\n    // }\r\n    // Encrypt comment\r\n    console.log(postCommentText, secret);\r\n    const ciphertext = encryptMultiLine(postCommentText, secret, encType);\r\n    const res = await fetch(`/api/threads/${topic || username}/${postname}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        text: ciphertext,\r\n        forumID: forumData.id,\r\n        encType: encType,\r\n      }),\r\n    });\r\n    if (res.ok) {\r\n      setError(false);\r\n      setHelperText(\"\");\r\n      // Render new comment\r\n      const newComment = await res.json();\r\n      setComments([...comments, newComment]);\r\n      setPostCommentText(\"\");\r\n    } else {\r\n      setError(true);\r\n      setHelperText(\"error posting comment\");\r\n    }\r\n  };\r\n  const handleDeleteComment = (data) => () => {\r\n    setOpenConfirmDelete(true);\r\n    setDeleteCommentData(data);\r\n  };\r\n  const handleDecision = (decision) => async () => {\r\n    if (decision === \"agree\") {\r\n      console.log(\"deleting comment\");\r\n      console.log(deleteCommentData);\r\n      // make fetch to delete\r\n      const res = await fetch(\"/api/delete/comment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id: deleteCommentData }),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) {\r\n        alert(data.message);\r\n      }\r\n    }\r\n    setOpenConfirmDelete(false);\r\n  };\r\n\r\n  const handleCloseConfirmDelete = () => {\r\n    setOpenConfirmDelete(false);\r\n  };\r\n\r\n  return (\r\n    <CssBaseline>\r\n      {forumData ? (\r\n        <Container>\r\n          <ConfirmDelete\r\n            open={openConfirmDelete}\r\n            handleDecision={handleDecision}\r\n            handleClose={handleCloseConfirmDelete}\r\n          />\r\n          <Paper className={classes.titleHolder}>\r\n            <Typography variant=\"subtitle1\" className={classes.titleElements}>\r\n              Post to\r\n              {\r\n                <RouteLink\r\n                  to={`/${forumData.postType == \"public\" ? \"public/\" : \"@\"}${\r\n                    forumData.publicTopic\r\n                  }`}\r\n                  style={linkStyle}\r\n                >\r\n                  <Link>{forumData.publicTopic}</Link>\r\n                </RouteLink>\r\n              }\r\n              by\r\n              {\r\n                <RouteLink to={`/@${forumData.author}`} style={linkStyle}>\r\n                  <Link>{\"@\" + forumData.author}</Link>\r\n                </RouteLink>\r\n              }\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.titleElements}>\r\n              {forumData?.title.slice(0, -5)}\r\n            </Typography>\r\n            {forumData?.image && (\r\n              <img className={classes.mainimg} src={forumData.image} />\r\n            )}\r\n            <Typography variant=\"body2\" className={classes.titleElements}>\r\n              {forumData?.subtitle}\r\n            </Typography>\r\n          </Paper>\r\n          <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\r\n            {encType === \"xor\" ? (\r\n              <Typography className={classes.aesType}>\r\n                Using {encType.toLocaleUpperCase()}\r\n              </Typography>\r\n            ) : (\r\n              <Typography\r\n                className={classes.aesType}\r\n                style={{ color: \"#FFFF00\" }}\r\n              >\r\n                Using {encType.toLocaleUpperCase()}\r\n              </Typography>\r\n            )}\r\n            <Switch\r\n              checked={encChecked}\r\n              onChange={handleChangeEnc}\r\n              inputProps={{ \"aria-label\": \"controlled\" }}\r\n              color=\"secondary\"\r\n            />\r\n          </div>\r\n          <SecretBox updateSecret={updateSecret} secret={secret} />\r\n          {comments?.map((comment) => (\r\n            <Comment\r\n              comment={comment}\r\n              secret={secret}\r\n              handleDeleteComment={handleDeleteComment}\r\n            />\r\n          ))}\r\n\r\n          <TextField\r\n            error={error}\r\n            helperText={helperText}\r\n            className={classes.comment}\r\n            id=\"outlined-textarea\"\r\n            label=\"Reply\"\r\n            value={postCommentText}\r\n            onInput={(e) => {\r\n              setError(false);\r\n              setHelperText(\"\");\r\n              setPostCommentText(e.target.value);\r\n            }}\r\n            placeholder=\"Enter your comment here\"\r\n            multiline\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          />\r\n          <Container className={classes.submitBox}>\r\n            <Button\r\n              disabled={!postCommentText.length}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmitComment}\r\n            >\r\n              Submit Comment\r\n            </Button>\r\n            {/* <SecretBox updateSecret={updateSecret} secret={secret} /> */}\r\n          </Container>\r\n        </Container>\r\n      ) : (\r\n        <LoadingIcon height={\"30rem\"} />\r\n      )}\r\n    </CssBaseline>\r\n  );\r\n}\r\n","// import List from \"@material-ui/core/List\";\r\n// import ListItem from \"@material-ui/core/ListItem\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\n// import { Link, Typography } from \"@material-ui/core\";\r\n// import { Paper } from \"@material-ui/core\";\r\n// export const FollowContainer = ({ following }) => {\r\n//   console.log(following);\r\n//   return (\r\n//     <List>\r\n//       {following.map((user, i) => (\r\n//         <ListItem key={i}>\r\n//           <Paper>\r\n//             <Typography variant={\"h6\"}>\r\n//               <Link href={`/user/${user.username}`}>{user.username}</Link>\r\n//             </Typography>\r\n//           </Paper>\r\n//         </ListItem>\r\n//       ))}\r\n//     </List>\r\n//   );\r\n// };\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport ImageCircle from \"./ImageCircle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"36ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  holder: {\r\n    border: \"1px solid\",\r\n    borderColor: theme.palette.primary.main3,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  top: {\r\n    paddingTop: 30,\r\n  },\r\n}));\r\nconst linkStyle = {\r\n  margin: \"1rem\",\r\n  textDecoration: \"none\",\r\n  color: \"blue\",\r\n};\r\nexport default function FollowContainer({ following }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.top}>\r\n      {following.map((user, i) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          lg={6}\r\n          className={classes.holder}\r\n          key={`${user}_${i}`}\r\n        >\r\n          <RouteLink to={`/@${user.username}`} style={linkStyle}>\r\n            <Link>\r\n              <Stack spacing={1} direction=\"column\">\r\n                <Stack spacing={1} direction=\"row\">\r\n                  {user?.avi ? (\r\n                    <ImageCircle\r\n                      imageLink={user.avi}\r\n                      size={50}\r\n                      alt={user.username}\r\n                      square\r\n                    ></ImageCircle>\r\n                  ) : (\r\n                    <Avatar>{user.username.slice(0, 2)}</Avatar>\r\n                  )}\r\n                  <Typography>{user.username}</Typography>\r\n                </Stack>\r\n                <Stack spacing={1}>\r\n                  <Typography>{user.bio}</Typography>\r\n                </Stack>\r\n              </Stack>\r\n            </Link>\r\n          </RouteLink>\r\n        </Grid>\r\n\r\n        // <div key={`${user}_${i}`}>\r\n        //   <Typography\r\n        //     component={RouteLink}\r\n        //     to={`/@${user.username}`}\r\n        //   ></Typography>\r\n\r\n        //   <ListItem\r\n        //     // onClick={(e) => {\r\n        //     //   e.preventDefault();\r\n        //     //   history.push(`/user/${user.username}`);\r\n        //     //   updateuser();\r\n        //     // }}\r\n\r\n        //     button\r\n        //     component={RouteLink}\r\n        //     to={`/@${user.username}`}\r\n        //     alignItems=\"flex-start\"\r\n        //   >\r\n        //     <ListItemAvatar>\r\n        //       <Avatar alt={user.username} src={\"/static/images/avatar/1.jpg\"} />\r\n        //     </ListItemAvatar>\r\n        //     <ListItemText\r\n        //       primary={user.username}\r\n        //       secondary={\r\n        //         <React.Fragment>\r\n        //           <Typography\r\n        //             component=\"span\"\r\n        //             variant=\"body2\"\r\n        //             className={classes.inline}\r\n        //             color=\"textPrimary\"\r\n        //           >\r\n        //             {user.bio}\r\n        //           </Typography>\r\n        //         </React.Fragment>\r\n        //       }\r\n        //     />\r\n        //   </ListItem>\r\n        //   <Divider variant=\"inset\" component=\"li\" />\r\n        // </div>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","async function fetchGraphQL(operationsDoc, operationName, variables) {\r\n  const result = await fetch(\"https://api.hicdex.com/v1/graphql\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      query: operationsDoc,\r\n      variables: variables,\r\n      operationName: operationName,\r\n    }),\r\n  });\r\n  return await result.json();\r\n}\r\nconst queryCreatedOBJKTs = `\r\n      query creatorGallery($address: String!) {\r\n        hic_et_nunc_token(where: {creator: {address: {_eq: $address}}, supply: {_gt: 0}}, order_by: {id: desc}) {\r\n          id\r\n          artifact_uri\r\n          display_uri\r\n          thumbnail_uri\r\n          timestamp\r\n          mime\r\n          title\r\n          description\r\n          supply\r\n          token_tags {\r\n            tag {\r\n              tag\r\n            }\r\n          }\r\n          swaps(where: {status: {_eq: \"0\"}}, order_by: {price: asc}) {\r\n            amount\r\n            amount_left\r\n            creator_id\r\n            price\r\n          }\r\n          token_holders(where: {quantity: {_gt: \"0\"}}, order_by: {id: asc}) {\r\n            quantity\r\n            holder {\r\n              address\r\n              name\r\n            }\r\n          }\r\n          trades(order_by: {timestamp: desc}) {\r\n            amount\r\n            buyer {\r\n              address\r\n              name\r\n            }\r\n            seller {\r\n              address\r\n              name\r\n            }\r\n            swap {\r\n              price\r\n            }\r\n            timestamp\r\n          }\r\n        }\r\n      }\r\n    `;\r\nconst queryCollectedOBJKTs = `\r\n      query collectorGallery($address: String!) {\r\n        hic_et_nunc_token_holder(where: {holder_id: {_eq: $address}, quantity: {_gt: \"0\"}, token: {supply: {_gt: \"0\"}}}, order_by: {id: desc}) {\r\n          token {\r\n            id\r\n            artifact_uri\r\n            display_uri\r\n            thumbnail_uri\r\n            timestamp\r\n            mime\r\n            title\r\n            description\r\n            supply\r\n            token_tags {\r\n              tag {\r\n                tag\r\n              }\r\n            }\r\n            creator {\r\n              address\r\n              name\r\n            }\r\n            swaps(where: {status: {_eq: \"0\"}}, order_by: {price: asc}) {\r\n              amount\r\n              amount_left\r\n              creator_id\r\n              price\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\nconst queryOBJKTPriceHistory = `\r\n      query PriceHistory($token: bigint = \"\") {\r\n        hic_et_nunc_trade(where: {token_id: {_eq: $token}}, order_by: {swap: {price: desc}}) {\r\n          timestamp\r\n          seller {\r\n            address\r\n          }\r\n          buyer {\r\n            address\r\n            name\r\n            metadata_file\r\n          }\r\n          swap {\r\n            price\r\n          }\r\n          token {\r\n            creator {\r\n              address\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `;\r\nconst queryOBJKTDetails = `\r\n      query Objkt($id: bigint!) {\r\n        hic_et_nunc_token_by_pk(id: $id) {\r\n          artifact_uri\r\n          creator {\r\n            address\r\n            name\r\n          }\r\n          description\r\n          display_uri\r\n          id\r\n          level\r\n          mime\r\n          royalties\r\n          supply\r\n          thumbnail_uri\r\n          metadata\r\n          timestamp\r\n          title\r\n          token_tags(order_by: {id: asc}) {\r\n            tag {\r\n              tag\r\n            }\r\n          }\r\n          swaps(order_by: {id: asc}) {\r\n            price\r\n            timestamp\r\n            status\r\n            amount\r\n            amount_left\r\n            creator {\r\n              address\r\n              name\r\n            }\r\n          }\r\n          trades(order_by: {timestamp: asc}) {\r\n            amount\r\n            buyer {\r\n              address\r\n              name\r\n            }\r\n            seller {\r\n              address\r\n              name\r\n            }\r\n            swap {\r\n              price\r\n            }\r\n            timestamp\r\n          }\r\n          token_holders(where: {quantity: {_gt: \"0\"}}, order_by: {id: asc}) {\r\n            quantity\r\n            holder {\r\n              address\r\n              name\r\n            }\r\n          }\r\n          hdao_balance\r\n          extra\r\n        }\r\n      }\r\n    `;\r\n// List of Fetch Requests\r\n\r\n// Get created objkts by address\r\n\r\nasync function fetchCreatedOBJKTs(address) {\r\n  const { errors, data } = await fetchGraphQL(\r\n    queryCreatedOBJKTs,\r\n    \"creatorGallery\",\r\n    {\r\n      address: address,\r\n    }\r\n  );\r\n  if (errors) {\r\n    console.error(errors);\r\n  }\r\n  const result = data.hic_et_nunc_token;\r\n  return result;\r\n}\r\n\r\n// Get collected objkts by address\r\n\r\nasync function fetchCollectedOBJKTs(address) {\r\n  const { errors, data } = await fetchGraphQL(\r\n    queryCollectedOBJKTs,\r\n    \"collectorGallery\",\r\n    {\r\n      address: address,\r\n    }\r\n  );\r\n  if (errors) {\r\n    console.error(errors);\r\n  }\r\n  const result = data.hic_et_nunc_token_holder.filter(\r\n    (holder) => holder.token.creator.address !== address\r\n  );\r\n  // console.log({ result });\r\n  return result;\r\n}\r\n\r\n// Get price history of OBJKT\r\n\r\nasync function fetchOBJKTPriceHistory(token) {\r\n  const { errors, data } = await fetchGraphQL(\r\n    queryOBJKTPriceHistory,\r\n    \"PriceHistory\",\r\n    {\r\n      token: token,\r\n    }\r\n  );\r\n  if (errors) {\r\n    console.error(errors);\r\n  }\r\n  const result = data.hic_et_nunc_trade;\r\n  // console.log({ result });\r\n  return result;\r\n}\r\n\r\n// Fetch OBJKT details\r\nasync function fetchOBJKTDetails(id) {\r\n  const { errors, data } = await fetchGraphQL(queryOBJKTDetails, \"Objkt\", {\r\n    id: id,\r\n  });\r\n  if (errors) {\r\n    console.error(errors);\r\n  }\r\n  const result = data.hic_et_nunc_token_by_pk;\r\n  return result;\r\n}\r\n\r\nconst generateCreationURIs = (creations) =>\r\n  creations.map(\r\n    (creation) =>\r\n      \"https://ipfs.io/ipfs/\" + creation.display_uri.split(\"//\").slice(-1)[0]\r\n  );\r\n\r\nconst generateThumbnailCR = (uri) => {\r\n  return \"https://ipfs.io/ipfs/\" + uri.split(\"//\").slice(-1)[0];\r\n};\r\nconst generateThumbnailCL = (uri) => {\r\n  return \"https://ipfs.io/ipfs/\" + uri.split(\"//\").slice(-1)[0];\r\n};\r\n\r\nconst generateCollectionURIs = (collections) =>\r\n  collections.map(\r\n    (item) =>\r\n      \"https://ipfs.io/ipfs/\" + item.token.display_uri.split(\"//\").slice(-1)[0]\r\n  );\r\n\r\nexport {\r\n  fetchCreatedOBJKTs,\r\n  fetchCollectedOBJKTs,\r\n  fetchOBJKTPriceHistory,\r\n  fetchOBJKTDetails,\r\n  generateThumbnailCR,\r\n};\r\n","import { Grid, Paper } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { query } from \"../helpers/api.js\";\r\nimport { Link as RouteLink, useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  fetchCollectedOBJKTs,\r\n  fetchCreatedOBJKTs,\r\n  generateThumbnailCR,\r\n} from \"../helpers/hicdex.js\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // padding: 80,\r\n    width: \"99%\",\r\n    paddingLeft: \"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    margin: theme.spacing(0),\r\n    // width: \"400px\",\r\n    // height: \"400px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.background.default,\r\n    // borderWidth: 2,\r\n    // borderRadius: 10,\r\n    // borderColor: theme.palette.text.secondary,\r\n    // borderStyle: \"solid\",\r\n    verticalAlign: \"middle\",\r\n    padding: 10,\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n  },\r\n  info: {\r\n    textAlign: \"left\",\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    paddingTop: 40,\r\n    overflowWrap: \"anywhere\",\r\n  },\r\n  info2: {\r\n    textAlign: \"left\",\r\n    paddingLeft: 20,\r\n    paddingBottom: 40,\r\n  },\r\n}));\r\n\r\nfunction LikedNFTs() {\r\n  const classes = useStyles();\r\n  let { username } = useParams();\r\n  const [NFTs, setNFTs] = useState([]);\r\n  useEffect(async () => {\r\n    const data = await query(`/api/likes?username=${username}`);\r\n    console.log(data.data);\r\n    setNFTs(data.data);\r\n  }, []);\r\n  console.log(NFTs.length);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {NFTs.map((nft, i) => (\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className={classes.paper}>\r\n            <RouteLink\r\n              to={`/tz/nft/${nft.nftID}`}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <img\r\n                className={classes.img}\r\n                src={generateThumbnailCR(nft.displayURI)}\r\n              ></img>\r\n            </RouteLink>\r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default LikedNFTs;\r\n","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { CommentContainer } from \"../components/CommentContainer\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuAppBar from \"../components/MenuAppBar\";\r\nimport Bio from \"../components/Bio\";\r\nimport UserPosts from \"../components/UserPosts\";\r\nimport SecretBox from \"../components/SecretBox\";\r\nimport LoadingIcon from \"../components/LoadingPageIcon\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Post from \"./Post\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport FollowContainer from \"../components/FollowContainer\";\r\nimport ConfirmDelete from \"../components/ConfirmDelete\";\r\nimport LikedNFTs from \"../components/LikedNFTs\";\r\n// import Button from \"@material-ui/core/Button\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return <div hidden={value !== index}>{children}</div>;\r\n}\r\n\r\nexport default function Profile() {\r\n  let match = useRouteMatch();\r\n  let { username } = useParams();\r\n  // const classes = useStyles();\r\n  const [openConfirmDelete, setOpenConfirmDelete] = useState(false);\r\n  const [deletePostData, setDeletePostData] = useState({});\r\n\r\n  const [createdPosts, setCreatedPosts] = useState([]);\r\n  const [userData, setUserData] = useState();\r\n  const [secret, setSecret] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [following, setFollowing] = useState([]);\r\n  const [obj, setObj] = useState({});\r\n  const [tab, setTab] = useState(0);\r\n  const [tab2, setTab2] = useState(0);\r\n  const [newUser, setNewUser] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    setTab(0);\r\n    setUserData(null);\r\n    fetch(`/api/user/${username}/info`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setCreatedPosts(result.createdPosts);\r\n        setUserData(result);\r\n      });\r\n    fetch(`/api/${username}/comments`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        // TODO: Rename postTime to time and CommentText to text\r\n        setComments(result.comments);\r\n      })\r\n      .catch((err) => console.log(\"Error: Could not fetch comments\"));\r\n\r\n    fetch(`/api/user/${username}/following/list/${username}`) // TODO: Fix this mess in api\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setFollowing(result.following);\r\n        setObj(result);\r\n      });\r\n  }, [username]);\r\n\r\n  const updateSecret = function (secret) {\r\n    console.log(secret);\r\n    // username = \"b\";\r\n    console.log(username);\r\n    setSecret(secret);\r\n  };\r\n\r\n  const handleChangeTab = (e, newTab) => {\r\n    setTab(newTab);\r\n  };\r\n\r\n  const handleChangeTab2 = (e, newTab) => {\r\n    setTab2(newTab);\r\n  };\r\n\r\n  const handleDecision = (decision) => async () => {\r\n    if (decision === \"agree\") {\r\n      console.log(deletePostData);\r\n      // make fetch to delete\r\n      const res = await fetch(\"/api/delete/post\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(deletePostData),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) {\r\n        alert(data.message);\r\n      }\r\n    }\r\n    setOpenConfirmDelete(false);\r\n  };\r\n\r\n  const handleCloseConfirmDelete = () => {\r\n    setOpenConfirmDelete(false);\r\n  };\r\n\r\n  const handleClickDelete = (data) => {\r\n    setOpenConfirmDelete(true);\r\n    setDeletePostData(data);\r\n    // console.log(data);\r\n  };\r\n  // const updateuser = () => {\r\n  //   console.log(\"update user called\");\r\n  //   setUserData();\r\n  //   setNewUser(1);\r\n  // };\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {/* <MenuAppBar auth={userData?.loggedIn} /> */}\r\n\r\n      <Switch>\r\n        {/* <Route path={`${match.path}/post/:postname`}>\r\n          <Post />\r\n        </Route> */}\r\n\r\n        {/* <Route exact path={`${match.path}/`}>\r\n         \r\n        </Route> */}\r\n\r\n        <Grid container maxWidth=\"xl\">\r\n          <ConfirmDelete\r\n            open={openConfirmDelete}\r\n            handleDecision={handleDecision}\r\n            handleClose={handleCloseConfirmDelete}\r\n          />\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <Grid item xs={9}>\r\n              <Bio\r\n                profile={userData}\r\n                canFollow={userData?.loggedIn && !userData?.isFollowing}\r\n              />\r\n            </Grid>\r\n            <div>\r\n              <Grid item xs={12}>\r\n                {userData?.loggedIn && userData?.currUser ? (\r\n                  <div style={{ paddingLeft: 20, paddingTop: 20 }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      href=\"/create\"\r\n                    >\r\n                      Create Forum\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {/* <div style={{ paddingTop: 30 }}>\r\n                  <SecretBox updateSecret={updateSecret} />\r\n                </div> */}\r\n              </Grid>\r\n            </div>\r\n            <Grid item xs={12}>\r\n              <Tabs\r\n                value={tab}\r\n                onChange={handleChangeTab}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n              >\r\n                <Tab label=\"Created Posts\"></Tab>\r\n                <Tab label=\"User Comments\"></Tab>\r\n                <Tab label=\"Following\"></Tab>\r\n                <Tab label=\"NFT\"></Tab>\r\n              </Tabs>\r\n            </Grid>\r\n            {/* <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              saxasx\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              saxasx\r\n            </Grid>\r\n            </Grid> */}\r\n            <TabPanel value={tab} index={0}>\r\n              {userData ? (\r\n                createdPosts.length ? (\r\n                  <UserPosts\r\n                    secret={secret}\r\n                    posts={createdPosts}\r\n                    onDelete={handleClickDelete}\r\n                  />\r\n                ) : (\r\n                  \"user hasn't made any posts yet\"\r\n                )\r\n              ) : (\r\n                <LoadingIcon height={\"30rem\"} />\r\n              )}\r\n            </TabPanel>\r\n            {/* </Grid> */}\r\n            {/* -------------------------------------- */}\r\n            {/* --------------------------------------- */}\r\n            <TabPanel value={tab} index={1}>\r\n              {comments.length ? (\r\n                <CommentContainer comments={comments} secret={secret} />\r\n              ) : (\r\n                \"This user hasn't made any comments yet\"\r\n              )}\r\n            </TabPanel>\r\n            <TabPanel value={tab} index={2}>\r\n              <Container>\r\n                {following.length ? (\r\n                  <FollowContainer\r\n                    following={following}\r\n                    secret={secret}\r\n                    // updateUser={updateuser}\r\n                  />\r\n                ) : (\r\n                  \"This user isn't following anyone\"\r\n                )}\r\n              </Container>\r\n            </TabPanel>\r\n            <TabPanel value={tab} index={3}>\r\n              <Tabs\r\n                value={tab2}\r\n                onChange={handleChangeTab2}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n              >\r\n                <Tab label=\"Liked NFTs\"></Tab>\r\n                <Tab label=\"ETH\"></Tab>\r\n                <Tab label=\"TZ\"></Tab>\r\n              </Tabs>\r\n              <TabPanel value={tab2} index={0}>\r\n                <LikedNFTs />\r\n              </TabPanel>\r\n              <TabPanel value={tab2} index={1}>\r\n                <TabPanel value={tab} index={3}>\r\n                  <Tabs\r\n                    value={tab2}\r\n                    onChange={handleChangeTab2}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                  >\r\n                    <Tab label=\"Liked\"></Tab>\r\n                    <Tab label=\"Created\"></Tab>\r\n                    <Tab label=\"Collected\"></Tab>\r\n                  </Tabs>\r\n                </TabPanel>\r\n              </TabPanel>\r\n              <TabPanel value={tab2} index={2}>\r\n                <TabPanel value={tab} index={3}>\r\n                  <Tabs\r\n                    value={tab2}\r\n                    onChange={handleChangeTab2}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                  >\r\n                    <Tab label=\"Liked\"></Tab>\r\n                    <Tab label=\"Created\"></Tab>\r\n                    <Tab label=\"Collected\"></Tab>\r\n                  </Tabs>\r\n                </TabPanel>\r\n              </TabPanel>\r\n            </TabPanel>\r\n\r\n            {/* <UserPosts secret={secret} posts={createdPosts} /> */}\r\n          </Grid>\r\n\r\n          {/* </Grid> */}\r\n        </Grid>\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { useState } from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  settingsContainer: {\r\n    marginTop: 30,\r\n  },\r\n  settingsItem: {\r\n    marginTop: 30,\r\n    wordBreak: \"break-all\",\r\n  },\r\n}));\r\nexport default function Public() {\r\n  const classes = useStyles();\r\n  const [createBtnDisabled, setCreateBtnDisabled] = useState([false]);\r\n  const [avi, setAvi] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const onSubmit = async () => {\r\n    console.log(avi, bio);\r\n    const res = await fetch(\"/user/settings\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        bio: bio,\r\n        avi: avi,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    alert(data.message);\r\n  };\r\n  const handleUploadFile = async (e) => {\r\n    const media = e.target.files[0];\r\n    const formdata = new FormData();\r\n    formdata.append(\"image\", media);\r\n    console.log(media);\r\n    setCreateBtnDisabled(true);\r\n    const res = await fetch(\"https://api.imgur.com/3/image/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Client-ID 4d15a14d3b5d53b\",\r\n      },\r\n      body: formdata,\r\n    });\r\n    const data = await res.json();\r\n\r\n    console.log(data);\r\n    setAvi(data.data.link);\r\n    setCreateBtnDisabled(false);\r\n  };\r\n  return (\r\n    <CssBaseline>\r\n      <Container maxWidth=\"sm\" className={classes.settingsContainer}>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Bio\r\n        </Typography>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Enter a profile bio here\"\r\n            variant=\"outlined\"\r\n            className={classes.settingsItem}\r\n            value={bio}\r\n            onChange={(e) => setBio(e.target.value)}\r\n            multiline\r\n          />\r\n        </FormControl>\r\n        <div>\r\n          <br></br>\r\n        </div>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Upload a profile\r\n        </Typography>\r\n        <FormControl fullWidth>\r\n          <div>\r\n            <br></br>\r\n          </div>\r\n          <input\r\n            accept=\"image/*\"\r\n            id=\"file\"\r\n            single\r\n            type=\"file\"\r\n            onInput={handleUploadFile}\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <div>\r\n            <br></br>\r\n          </div>\r\n          <Typography variant=\"comment\">Max file size 20MB</Typography>\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <Typography\r\n            variant=\"body2\"\r\n            gutterBottom\r\n            className={classes.settingsItem}\r\n          >\r\n            Darkmode\r\n          </Typography>\r\n          <Switch defaultChecked color=\"primary\" />\r\n        </FormControl>\r\n        <Button\r\n          className={classes.settingsItem}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          startIcon={<SaveIcon />}\r\n          onClick={onSubmit}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 500,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  outline: \"none\",\r\n};\r\n\r\nexport default function Public() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    stayLoggedIn: false,\r\n  });\r\n  const history = useHistory();\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  const handleSubmit = async () => {\r\n    // make fetch request to web server\r\n    const res = await fetch(\"/api/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n    if (!res || res.status !== 200) {\r\n      throw \"error signing up\";\r\n      return;\r\n    }\r\n    const data = await res.json();\r\n    if (!data.success) {\r\n      return alert(data.message);\r\n    }\r\n    setOpen(true);\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n      setValues({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        stayLoggedIn: false,\r\n      });\r\n      // redirect to login\r\n      history.push(\"/login\");\r\n    }, 10 * 1000);\r\n    // on confirmation redirect to confirm by email page\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                autoFocus\r\n                onChange={handleChange(\"username\")}\r\n                value={values[\"username\"]}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange(\"email\")}\r\n                value={values[\"email\"]}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange(\"password\")}\r\n                value={values[\"password\"]}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange(\"confirmPassword\")}\r\n                value={values[\"confirmPassword\"]}\r\n              />\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"Stay logged in\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <div>\r\n              <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n              >\r\n                <Box sx={style}>\r\n                  <Typography\r\n                    id=\"modal-modal-title\"\r\n                    variant=\"h6\"\r\n                    component=\"h2\"\r\n                  >\r\n                    Account initiated\r\n                  </Typography>\r\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                    A verification link has been sent to you. Click the link you\r\n                    were emailed to verify your account.\r\n                  </Typography>\r\n                </Box>\r\n              </Modal>\r\n            </div>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"login\" variant=\"body2\">\r\n                  Already have an account? Login\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}></Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 500,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  outline: \"none\",\r\n};\r\n\r\nexport default function Login({ handleLogin }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  // console.log(\"handle login: \", handleLogin);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"you submitted this form\");\r\n    const res = await fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n    if (!res || res.status !== 200) {\r\n      throw \"error logging in\";\r\n      return;\r\n    }\r\n    const data = await res.json();\r\n    console.log(data);\r\n    if (data.valid) {\r\n      handleLogin(data.user);\r\n      history.push(data.redirect);\r\n    }\r\n    const res2 = await fetch(\"/api/login/status\", {\r\n      credentials: \"include\",\r\n    });\r\n    if (!res2 || res2.status != 200) {\r\n      console.log(res2);\r\n      console.log(\"error\");\r\n      return;\r\n    }\r\n    const data2 = await res2.json();\r\n    console.log(data2);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <div>\r\n            {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n              <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                  Verification needed\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                  You must verify your email address by clicking the link that\r\n                  was sent to you.\r\n                </Typography>\r\n              </Box>\r\n            </Modal>\r\n          </div>\r\n          <Button\r\n            disabled={!(username.length && password.length)}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}></Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CreateSharpIcon from \"@material-ui/icons/CreateSharp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  input: {\r\n    // backgroundColor: \"blue\",\r\n  },\r\n}));\r\n\r\nexport default function Public() {\r\n  let { topic } = useParams();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    subtitle: \"\",\r\n    image: \"\",\r\n    key: \"\",\r\n    withKey: true,\r\n    encryptTitle: false,\r\n    storeKey: true,\r\n    allowOtherStoreKey: true,\r\n  });\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // make fetch request\r\n    const res = await fetch(\"/api/create/forum\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: values.title,\r\n        subtitle: values.subtitle,\r\n        img: values.image,\r\n        key: values.key,\r\n        postType: \"self\",\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(data);\r\n    if (data.success) {\r\n      return history.push(data.url);\r\n    }\r\n    alert(data.message);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <CreateSharpIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create forum post\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <Typography variant=\"comment\">\r\n                * Titles and subtitles will not be encrypted *\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-textarea\"\r\n                label=\"Title\"\r\n                placeholder=\"\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                onChange={handleChange(\"title\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-textarea\"\r\n                label=\"Subtitle\"\r\n                placeholder=\"\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                onChange={handleChange(\"subtitle\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"file\"\r\n                single\r\n                type=\"file\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"comment\">Max file size 20MB</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {/* <TextField\r\n                fullWidth\r\n                id=\"outlined-textarea\"\r\n                label=\"Key\"\r\n                placeholder=\"\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                onChange={handleChange(\"key\")}\r\n              /> */}\r\n              {/* <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"key\" color=\"primary\" checked=\"checked\" />\r\n                  }\r\n                  label=\"Generate forum with a key\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"key\" color=\"primary\" checked=\"checked\" />\r\n                  }\r\n                  label=\"Encrypt title and subtitle with your key\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"key\" color=\"primary\" checked=\"checked\" />\r\n                  }\r\n                  label=\"Store key in your keychain\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"key\" color=\"primary\" checked=\"checked\" />\r\n                  }\r\n                  label=\"Allow key to be stored in other users keychain\"\r\n                />\r\n              </Grid> */}\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\"></Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}></Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FilterHdrIcon from \"@material-ui/icons/FilterHdr\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport MonetizationOnOutlinedIcon from \"@material-ui/icons/MonetizationOnOutlined\";\r\nimport CameraSharpIcon from \"@material-ui/icons/CameraSharp\";\r\nimport GavelSharpIcon from \"@material-ui/icons/GavelSharp\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport ComputerIcon from \"@material-ui/icons/Computer\";\r\nimport ExtensionSharpIcon from \"@material-ui/icons/ExtensionSharp\";\r\nimport CreateSharpIcon from \"@material-ui/icons/CreateSharp\";\r\nimport SportsSharpIcon from \"@material-ui/icons/SportsSharp\";\r\nimport MoodSharpIcon from \"@material-ui/icons/MoodSharp\";\r\nimport HelpOutlineSharpIcon from \"@material-ui/icons/HelpOutlineSharp\";\r\nimport GamesOutlinedIcon from \"@material-ui/icons/GamesOutlined\";\r\nimport AlbumSharpIcon from \"@material-ui/icons/AlbumSharp\";\r\nimport AnnouncementRoundedIcon from \"@material-ui/icons/AnnouncementRounded\";\r\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\r\nimport FormatPaintIcon from \"@material-ui/icons/FormatPaint\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: 80,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    margin: theme.spacing(0),\r\n    // width: \"400px\",\r\n    // height: \"400px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.background.default,\r\n\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n\r\n    borderColor: theme.palette.text.secondary,\r\n    borderStyle: \"solid\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n  icon: {\r\n    fontSize: \"8vw\",\r\n  },\r\n}));\r\n\r\nexport default function AutoGrid() {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    document.title = \"Cipherforums | Public Topics\";\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={5} justifyContent=\"center\">\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Business\" component={RouteLink}>\r\n            {/* <Link to=\"/public/business\"> */}\r\n            <Paper className={classes.paper}>\r\n              <MonetizationOnOutlinedIcon className={classes.icon} />\r\n              <Typography>Business</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Images\" component={RouteLink}>\r\n            {/* <Link to=\"/public/images\"> */}\r\n            <Paper className={classes.paper}>\r\n              <CameraSharpIcon className={classes.icon} />\r\n              <Typography>Images</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Politics\" component={RouteLink}>\r\n            {/* <Link to=\"/public/politics\"> */}\r\n            <Paper className={classes.paper}>\r\n              <GavelSharpIcon className={classes.icon} />\r\n              <Typography>Politics</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Technology\" component={RouteLink}>\r\n            {/* <Link to=\"/public/technology\"> */}\r\n            <Paper className={classes.paper}>\r\n              <ComputerIcon className={classes.icon} />\r\n              <Typography>Technology</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/News\" component={RouteLink}>\r\n            {/* <Link to=\"/public/news\"> */}\r\n            <Paper className={classes.paper}>\r\n              <AnnouncementRoundedIcon className={classes.icon} />\r\n              <Typography>News</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Gaming\" component={RouteLink}>\r\n            {/* <Link to=\"/public/gaming\"> */}\r\n            <Paper className={classes.paper}>\r\n              <GamesOutlinedIcon className={classes.icon} />\r\n              <Typography>Gaming</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Music\" component={RouteLink}>\r\n            {/* <Link to=\"/public/music\"> */}\r\n            <Paper className={classes.paper}>\r\n              <AlbumSharpIcon className={classes.icon} />\r\n              <Typography>Music</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Science\" component={RouteLink}>\r\n            {/* <Link to=\"/public/science\"> */}\r\n            <Paper className={classes.paper}>\r\n              <EcoRoundedIcon className={classes.icon} />\r\n              <Typography>Science</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Questions\" component={RouteLink}>\r\n            {/* <Link to=\"/public/questions\"> */}\r\n            <Paper className={classes.paper}>\r\n              <HelpOutlineSharpIcon className={classes.icon} />\r\n              <Typography>Questions</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Outdoors\" component={RouteLink}>\r\n            {/* <Link to=\"/public/outdoors\"> */}\r\n            <Paper className={classes.paper}>\r\n              <FilterHdrIcon className={classes.icon} />\r\n              <Typography>Outdoors</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Puzzles\" component={RouteLink}>\r\n            {/* <Link to=\"/public/puzzles\"> */}\r\n            <Paper className={classes.paper}>\r\n              <ExtensionSharpIcon className={classes.icon} />\r\n              <Typography>Puzzles</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Writing\" component={RouteLink}>\r\n            {/* <Link to=\"/public/witing\"> */}\r\n            <Paper className={classes.paper}>\r\n              <CreateSharpIcon className={classes.icon} />\r\n              <Typography>Writing</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Travel\" component={RouteLink}>\r\n            {/* <Link to=\"/public/travel\"> */}\r\n            <Paper className={classes.paper}>\r\n              <FlightTakeoffIcon className={classes.icon} />\r\n              <Typography>Travel</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Art\" component={RouteLink}>\r\n            {/* <Link to=\"/public/travel\"> */}\r\n            <Paper className={classes.paper}>\r\n              <EcoRoundedIcon className={classes.icon} />\r\n              <Typography>Art</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Sports\" component={RouteLink}>\r\n            {/* <Link to=\"/public/sports\"> */}\r\n            <Paper className={classes.paper}>\r\n              <SportsSharpIcon className={classes.icon} />\r\n              <Typography>Sports</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Link to=\"/public/Comedy\" component={RouteLink}>\r\n            {/* <Link to=\"/public/comedy\"> */}\r\n            <Paper className={classes.paper}>\r\n              <MoodSharpIcon className={classes.icon} />\r\n              <Typography>Comedy</Typography>\r\n            </Paper>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: -20,\r\n    padding: 50,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  tab: {\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return <div hidden={value !== index}>{children}</div>;\r\n}\r\n\r\nexport default function FullWidthGrid() {\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(0);\r\n  const handleChangeTab = (e, newTab) => {\r\n    setTab(newTab);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              What is this website?\r\n            </Typography>\r\n            <Typography>\r\n              This website utilizes to intertwined technologies. The first is\r\n              encryption, and the second is blockchains. Use the slider below to\r\n              learn more about how each technology is implemented in this\r\n              website.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Encryption\"></Tab>\r\n          <Tab label=\"Blockchain\"></Tab>\r\n        </Tabs>\r\n      </Grid>\r\n      <TabPanel value={tab} index={0}>\r\n        <Grid container spacing={3} className={classes.tab}>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Data Modification\r\n              </Typography>\r\n              <Typography>\r\n                This website uses encryption and obfuscation to provide privacy,\r\n                scarcity, and secrecy for digital content. The goal of\r\n                Cipherforums is to allow individuals to choose what degree of\r\n                accessibility they would like their social content to have on\r\n                the internet. This is achieved with the implementation of two\r\n                different processes.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                XOR (logic gate)\r\n              </Typography>\r\n              <Typography gutterBottom>\r\n                Providing thorough obfuscation, to prevent ad targeting, online\r\n                indexing, or censorship.\r\n              </Typography>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                AES (encryption)\r\n              </Typography>\r\n              <Typography gutterBottom>\r\n                Providing 256 bit military grade encryption.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Paper className={classes.paper}>\r\n            <Typography>\r\n              All operations are done client side. Our code is open source and\r\n              freely auditable and available at ____________.\r\n            </Typography>\r\n          </Paper>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h3\" gutterBottom>\r\n                XOR\r\n              </Typography>\r\n              <Typography>\r\n                Xor is a simple logic gate that creates a binary output from two\r\n                binary inputs. The rules of the logic gate are as follows.\r\n              </Typography>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <Typography>\r\n                If the two inputs have the same value, a 0 is generated.\r\n              </Typography>\r\n              <Typography>\r\n                If the two inputs have a different value, a 1 is generated.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Example\r\n              </Typography>\r\n              <Typography>\r\n                Compare each digit with the digit below it.\r\n              </Typography>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <Typography variant=\"h5\">1 0 0 1 0 1 - String #1</Typography>\r\n              <Typography variant=\"h5\">0 1 0 0 0 1 - String #3</Typography>\r\n              <Typography variant=\"h5\">___________</Typography>\r\n              <Typography variant=\"h5\">\r\n                1 1 0 1 1 0 - Result of the two strings XORed against eachother\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          {/* <Grid item xs={11}>\r\n          <Paper className={classes.paper}>\r\n            <Typography>* XOR JAVASCIPT DEMO *</Typography>\r\n          </Paper>\r\n        </Grid> */}\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                How is XOR used?\r\n              </Typography>\r\n              <Typography>\r\n                Both messages and keys are contained in 256 bit chucks\r\n                (equivalent to 64 characters). Keys are derived using the SHA256\r\n                hash of the text entered into the key input field. Message\r\n                chunks are padded with random letters to make sure that their\r\n                length always equals 64 characters, and are XORed against the 64\r\n                character key (a SHA256 hash). This website converts the data to\r\n                utf-8 text in the browser, but the data itself will always be\r\n                strings of hex that are interpreted client side.\r\n              </Typography>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <Typography>\r\n                When text is entered, all text is converted into hex numbers.\r\n                The hex for the message is XORed against the hex key to produce\r\n                cipher hex. This cipher hex is the only thing sent to\r\n                cipherforums servers, and is the only thing visable to search\r\n                engines. Doing this enables cipher text to be public, while the\r\n                original message can only be recovered by XORing the cipher\r\n                against its corresponding key.\r\n              </Typography>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <Typography>\r\n                However, this process is not considered encryption. When a XOR\r\n                key is repeated more than once, cryptographers can use\r\n                consistencies in the cipher text to derive the key, without\r\n                knowing it beforehand. Because of this, the XOR technique is\r\n                only considered obfuscation, meaning you are hiding and\r\n                obscuring the text, not encrypting it. In order for this\r\n                individual to retrieve the original message, they would have to\r\n                use cryptanalysis, time, money, or all 3. This process creates\r\n                an environment where your data is hidden by default, and work\r\n                has to be done to retrieve the original message. If strong data\r\n                security is your goal, then AES is a much more suitable tool.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h3\" gutterBottom>\r\n                AES\r\n              </Typography>\r\n              <Typography>\r\n                AES is a symmetric-key encryption technique developed by the\r\n                United States National Security Agency, and is considered to be\r\n                military grade. With AES, you are thoroughly encrypting your\r\n                data. AES is considered to be practically irreversible, and can\r\n                be used to encrypt sensitive information. It should be noted\r\n                however, that while encryption is an incredibly powerful tool,\r\n                it still requires responsible key security.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                How is AES used?\r\n              </Typography>\r\n              <Typography>\r\n                On Cipherforums, using AES encryption will not change the user\r\n                experience much, but will do very different things to your data.\r\n                While changing methods is the simple flip of a switch, XOR will\r\n                obscure your data while AES will thoroughly encrypt it. These\r\n                are two very different things. Direct messaging will always use\r\n                AES, and user posts and comments can be AES encrypted if the\r\n                user chooses to do so.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={11}></Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n      <TabPanel value={tab} index={1}>\r\n        <Grid container spacing={3} className={classes.tab}>\r\n          <Grid item xs={11}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Data Storage\r\n              </Typography>\r\n              <Typography>\r\n                This website uses blockchains to access and store data.\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport LaptopChromebookSharpIcon from \"@material-ui/icons/LaptopChromebookSharp\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport HubIcon from \"@material-ui/icons/DeviceHub\";\r\nimport homeLogo from \"../logo.svg\";\r\nimport { encrypt, decrypt } from \"../helpers/convert.js\";\r\nimport \"../snowflakes.css\";\r\nimport LockOpenOutlinedIcon from \"@mui/icons-material/LockOpenOutlined\";\r\nimport ArrowForward from \"@mui/icons-material/ArrowForward\";\r\nimport MultilineEncryptDemo from \"../components/MultilineEncryptDemo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    flexGrow: 1,\r\n    padding: 50,\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    wordBreak: \"break-word\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  div: {\r\n    padding: theme.spacing(2),\r\n    maxWidth: \"100%\",\r\n    // paddingTop: 100,\r\n    // paddingBottom: 100,\r\n    textAlign: \"center\",\r\n    boxShadow: \"none\",\r\n    color: theme.palette.text.secondary,\r\n    // borderTopWidth: 3,\r\n    // borderColor: theme.palette.text.secondary,\r\n    // borderStyle: \"solid\",\r\n  },\r\n}));\r\n\r\nexport default function AutoGrid() {\r\n  const classes = useStyles();\r\n  const title = \"cipherforums.com\";\r\n  const subtitle = \"A cryptographically secure forum\";\r\n  const encrypted1 = \"congrats on your first cipher message!\";\r\n  const [char, setChar] = useState(\"a\");\r\n  const [userKey, setUserKey] = useState(\"\");\r\n  const [toggle, setToggle] = useState(true);\r\n  const [cipherTexts, setCipherTexts] = useState({\r\n    title: {\r\n      xor: encrypt(title, \"xor\", \"xor\"),\r\n      aes: encrypt(title, \"xor\", \"aes\"),\r\n    },\r\n    subtitle: {\r\n      xor: encrypt(subtitle, \"xor\", \"xor\"),\r\n      aes: encrypt(subtitle, \"xor\", \"aes\"),\r\n    },\r\n    encrypted1: {\r\n      xor: encrypt(encrypted1, \"xor\", \"xor\"),\r\n      aes: encrypt(encrypted1, \"xor\", \"aes\"),\r\n    },\r\n  });\r\n  const [secret, setSecret] = useState(\"xor\");\r\n  const randomSecrets = () => {\r\n    setSecret(\"xor\");\r\n    setTimeout(() => {\r\n      const interval = setInterval(() => setSecret(Math.random() * 100), 10);\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        randomSecrets();\r\n      }, 1000);\r\n    }, 3000);\r\n  };\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  useEffect(() => {\r\n    document.title = \"Cipherforums\";\r\n    setInterval(() => {\r\n      setChar(characters.charAt(Math.random() * 62));\r\n    }, 20);\r\n    // randomly generate secret keys\r\n    //5b351c7f7d64542873542c1a4e744f5c604a2e1365687f655a3b5d470155684b7b5b24007869557246302c43687819540845585310050b464c59171754090944\r\n    randomSecrets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <img\r\n        style={{\r\n          height: 100,\r\n          width: 100,\r\n          position: \"absolute\",\r\n          marginTop: 15,\r\n          top: 0,\r\n        }}\r\n        src={homeLogo}\r\n      /> */}\r\n      {Array(200)\r\n        .fill()\r\n        .map(() => (\r\n          <div class=\"snowflake triangle\">{char}</div>\r\n        ))}\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Container>\r\n            <Typography variant=\"h2\" align=\"center\">\r\n              {decrypt(cipherTexts.title.aes, userKey || secret, \"aes\").slice(\r\n                0,\r\n                16\r\n              ) || \"_\" * 16}\r\n            </Typography>\r\n\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n              {decrypt(\r\n                cipherTexts.subtitle.aes,\r\n                userKey || secret,\r\n                \"aes\"\r\n              ).slice(0, 40) || \"_____\" * 50}\r\n            </Typography>\r\n          </Container>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} align=\"center\">\r\n          {/* <MultilineEncryptDemo /> */}\r\n          {/* <Button variant=\"outlined\">Interactive Demo</Button> */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <TextField\r\n              // variant=\"filled\"\r\n              value={userKey}\r\n              size=\"small\"\r\n              onChange={(e) => setUserKey(e.target.value)}\r\n              label=\"Enter a key here\"\r\n              helperText=\"Type 'xor' to decrypt\"\r\n            />\r\n            <ArrowForward\r\n              // style={{ marginTop: \"8px\", marginLeft: \"10px\" }}\r\n              fontSize=\"medium\"\r\n            />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"h6\"\r\n              style={{ lineHeight: \"-10px\" }}\r\n            >\r\n              {userKey.padEnd(3, \"_\")}\r\n            </Typography>\r\n            <ArrowForward\r\n              // style={{ marginTop: \"8px\", marginLeft: \"10px\" }}\r\n              fontSize=\"medium\"\r\n            />\r\n            <LockOpenOutlinedIcon\r\n              // style={{ marginTop: \"8px\", marginLeft: \"10px\" }}\r\n              fontSize=\"medium\"\r\n            />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"h6\"\r\n              style={{ lineHeight: \"-10px\" }}\r\n            >\r\n              {decrypt(cipherTexts.encrypted1.xor, userKey, \"xor\").slice(\r\n                0,\r\n                encrypted1.length\r\n              ) || \"_____\" * 50}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Container maxWidth=\"lg\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={4} align=\"center\">\r\n              <Link to=\"/public\" component={RouteLink}>\r\n                <div className={classes.div}>\r\n                  <LaptopChromebookSharpIcon style={{ fontSize: \"15vw\" }} />\r\n                  <Typography>Visit the public forums</Typography>\r\n                </div>\r\n              </Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={4} align=\"center\">\r\n              <Link to=\"/signup\" component={RouteLink}>\r\n                <div className={classes.div}>\r\n                  <ExitToAppIcon style={{ fontSize: \"15vw\" }} />\r\n                  <Typography>Signup</Typography>\r\n                </div>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} align=\"center\">\r\n              <Link to=\"/NftExplore\" component={RouteLink}>\r\n                <div className={classes.div}>\r\n                  <HubIcon style={{ fontSize: \"15vw\" }} />\r\n                  <Typography>Blockchain Tokens</Typography>\r\n                </div>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: 50,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default function FullWidthGrid() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h2\">Search</Typography>\r\n          <Paper className={classes.paper}>\r\n            {\" \"}\r\n            <TextField\r\n              autoComplete=\"fname\"\r\n              name=\"Search\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"Search\"\r\n              label=\"...\"\r\n              autoFocus\r\n              onClick={handleClick}\r\n            />\r\n          </Paper>\r\n          <Menu\r\n            id=\"basic-menu\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            MenuListProps={{\r\n              \"aria-labelledby\": \"basic-button\",\r\n            }}\r\n          >\r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose}>My account</MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n          </Menu>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport ImageCircle from \"./ImageCircle\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n    marginLeft: 20,\r\n    border: \"1px solid\",\r\n    borderColor: theme.palette.primary.main3,\r\n    // color: \"#ffffff\",\r\n  },\r\n  title: {\r\n    marginLeft: 20,\r\n  },\r\n  details: {\r\n    display: \"inline-flex\",\r\n    flexDirection: \"row\",\r\n    // padding: 20,\r\n  },\r\n  content: {\r\n    // flex: \"1 0 auto\",\r\n    overflowWrap: \"break-word\",\r\n    color: \"primary\",\r\n    // padding: 5,\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  img: {\r\n    padding: 10,\r\n    width: 150,\r\n  },\r\n  card__actions: {\r\n    marginTop: 10,\r\n  },\r\n  create: {\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n  },\r\n  type: {\r\n    overflowWrap: \"break-word\",\r\n    width: \"100%\",\r\n    height: \"5rem\",\r\n    overflowY: \"hidden\",\r\n  },\r\n}));\r\nconst linkStyle = {\r\n  margin: \"1rem\",\r\n  textDecoration: \"none\",\r\n  color: \"blue\",\r\n};\r\nexport const PublicPost = ({ details, topic }) => {\r\n  const classes = useStyles();\r\n  console.log(details);\r\n  return (\r\n    <Grid item xs={12} sm={6} key={details.id}>\r\n      <RouteLink to={`/public/${topic}/${details.url}`} style={linkStyle}>\r\n        <Link>\r\n          <Card className={classes.root}>\r\n            {/* <div className={classes.details}> */}\r\n            <Stack spacing={1} direction=\"row\">\r\n              <div className={classes.img}>\r\n                <ImageCircle\r\n                  imageLink={details.image || \"https://i.imgur.com/Ck4MLYV.jpg\"}\r\n                  size={150}\r\n                  square\r\n                ></ImageCircle>\r\n              </div>\r\n              {/* <img\r\n                className={classes.img}\r\n                alt=\"complex\"\r\n                src={details.image || \"https://i.imgur.com/AD3MbBi.jpeg\"}\r\n              /> */}\r\n              <Stack\r\n                spacing={1}\r\n                direction=\"column\"\r\n                justifyContent=\"space-between\"\r\n                paddingLeft={1}\r\n              >\r\n                <Stack spacing={1} direction=\"row\" padding={1}>\r\n                  {/* <CardContent className={classes.content}> */}\r\n                  <RouteLink to={`/@${details.username}`} style={linkStyle}>\r\n                    <Link>\r\n                      <Typography variant=\"caption\">\r\n                        @{details.username}\r\n                      </Typography>\r\n                    </Link>\r\n                  </RouteLink>\r\n                  <Typography variant=\"body2\" className={classes.type}>\r\n                    {details.url.slice(0, -5)}\r\n                  </Typography>\r\n                  {/* </CardContent> */}\r\n                </Stack>\r\n                {/* </div> */}\r\n                <Stack\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-end\"\r\n                  spacing={1}\r\n                  padding={1}\r\n                >\r\n                  <FavoriteBorderIcon></FavoriteBorderIcon>\r\n                  {/* <FavoriteIcon></FavoriteIcon> */}\r\n                  <Typography\r\n                    className={classes.card__actions}\r\n                    variant=\"caption\"\r\n                  >\r\n                    {details.numComments} comments\r\n                  </Typography>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n          </Card>\r\n        </Link>\r\n      </RouteLink>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useParams } from \"react-router\";\r\nimport { PublicPost } from \"../components/PublicPost\";\r\nimport LoadingIcon from \"../components/LoadingPageIcon\";\r\nimport Stack from \"@mui/material/Stack\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n    marginLeft: 20,\r\n    // color: \"#ffffff\",\r\n  },\r\n\r\n  title: {\r\n    marginLeft: 20,\r\n  },\r\n  details: {\r\n    display: \"inline-flex\",\r\n    flexDirection: \"row\",\r\n    // padding: 20,\r\n  },\r\n  content: {\r\n    // flex: \"1 0 auto\",\r\n    overflowWrap: \"break-word\",\r\n    color: \"#ffffff\",\r\n    padding: 14,\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  img: {\r\n    maxHeight: 150,\r\n    maxWidth: 180,\r\n    minHeight: 50,\r\n    padding: 0,\r\n  },\r\n  card__actions: {\r\n    display: \"flex\",\r\n    alignContent: \"flex-end\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: 10,\r\n  },\r\n  create: {\r\n    marginTop: 30,\r\n    marginLeft: 10,\r\n  },\r\n}));\r\n\r\nexport default function MediaControlCard() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const theme = useTheme();\r\n  let { topic } = useParams();\r\n  console.log(topic);\r\n\r\n  const [topicPosts, setTopicPosts] = useState([]);\r\n  // Load in all forums with the current topic\r\n  useEffect(async () => {\r\n    const res = await fetch(`/api/public/${topic}`);\r\n    const data = await res.json();\r\n    document.title = `Cipherforums | ${topic}`;\r\n    setTopicPosts(data);\r\n    setLoading(false);\r\n  }, []);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"left\",\r\n      }}\r\n    >\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography className={classes.root} variant=\"h3\">\r\n          {topic}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Button\r\n          className={classes.create}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={RouteLink}\r\n          to={`/create/public/${topic}`}\r\n        >\r\n          Post to {topic}\r\n        </Button>\r\n      </Grid>\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            height: 500,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <br />\r\n          <LoadingIcon style={{ position: \"absolute\", height: \"30rem\" }} />\r\n        </div>\r\n      ) : topicPosts.length ? (\r\n        topicPosts.map((post, i) => (\r\n          <PublicPost key={i} details={post} topic={topic} />\r\n        ))\r\n      ) : (\r\n        <Grid item xs={12}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Typography variant=\"h5\">\r\n              There are no posts on {topic} yet. Make the first one!\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CreateSharpIcon from \"@material-ui/icons/CreateSharp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Public() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [createBtnDisabled, setCreateBtnDisabled] = useState([false]);\r\n  const { topic } = useParams();\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    subtitle: \"\",\r\n    image: \"\",\r\n    postType: \"public\",\r\n  });\r\n  useEffect(() => {\r\n    document.title = \"Cipherforums | Create Public\";\r\n  });\r\n  const handleChange = (props) => (e) => {\r\n    console.log(values);\r\n    setValues({ ...values, [props]: e.target.value });\r\n  };\r\n  // handle submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // make fetch request\r\n    const res = await fetch(`/api/public/${topic}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      console.log(data.message);\r\n      history.push(`/public/${topic}/${data.url}`);\r\n    } else {\r\n      alert(data.message);\r\n    }\r\n  };\r\n  const handleUploadFile = async (e) => {\r\n    const media = e.target.files[0];\r\n    const formdata = new FormData();\r\n    formdata.append(\"image\", media);\r\n    console.log(media);\r\n    setCreateBtnDisabled(true);\r\n    const res = await fetch(\"https://api.imgur.com/3/image/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Client-ID 4d15a14d3b5d53b\",\r\n      },\r\n      body: formdata,\r\n    });\r\n    const data = await res.json();\r\n\r\n    console.log(data);\r\n    setValues({ ...values, [\"image\"]: data.data.link });\r\n    setCreateBtnDisabled(false);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <CreateSharpIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Post to {topic}\r\n        </Typography>\r\n        <Typography variant=\"comment\">* Titles and subtitles are never encrypted *</Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-textarea\"\r\n                label=\"Title\"\r\n                placeholder=\"\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                value={values.title}\r\n                onChange={handleChange(\"title\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-textarea\"\r\n                label=\"Subtitle\"\r\n                placeholder=\"\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                value={values.subtitle}\r\n                onChange={handleChange(\"subtitle\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid item xs={12}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"file\"\r\n                  single\r\n                  type=\"file\"\r\n                  onInput={handleUploadFile}\r\n                />\r\n              </Grid>\r\n              <Typography variant=\"comment\">Max file size 20MB</Typography>\r\n            </Grid>\r\n            {/* <LoadingButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              loading={createBtnDisabled}\r\n            >\r\n              Create\r\n            </LoadingButton> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              loading={createBtnDisabled}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\"></Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}></Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nclass AlertDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleAgree = () => {\r\n    console.log(\"I agree!\");\r\n    this.handleClose();\r\n  };\r\n  handleDisagree = () => {\r\n    console.log(\"I do not agree.\");\r\n    this.handleClose();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Button to trigger the opening of the dialog */}\r\n        <Button onClick={this.handleClickOpen}>Delete this</Button>\r\n        {/* Dialog that is displayed if the state open is true */}\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you sure you want to delete?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleDisagree} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleAgree} color=\"primary\" autoFocus>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertDialog;\r\n","import React, { useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MoodSharpIcon from \"@mui/icons-material/MoodSharp\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  holder: {\r\n    fontSize: 25,\r\n    padding: 40,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  box: {\r\n    fontSize: 30,\r\n    padding: 40,\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function SimplePaper() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let { emailToken } = useParams();\r\n  useEffect(async () => {\r\n    const res = await fetch(\"/api/signup/validate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ emailToken: emailToken }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(data);\r\n    if (!data.success) {\r\n      alert(data.message);\r\n    } else {\r\n      setTimeout(() => {\r\n        history.push(\"/login\");\r\n      }, 2000);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.box}>\r\n      <Paper elevation={3} className={classes.holder}>\r\n        {\" \"}\r\n        Your email has been confirmed!\r\n        {/* <MoodSharpIcon className={classes.box} style={{ fontSize: \"3vw\" }} /> */}\r\n      </Paper>{\" \"}\r\n      <Paper elevation={3} className={classes.holder}>\r\n        {\" \"}\r\n        <RouteLink to={`/login`} style={{ textDecoration: \"none\" }}>\r\n          <Link underline=\"always\">Login</Link>\r\n        </RouteLink>\r\n      </Paper>{\" \"}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  img: {\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n}));\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"5%\",\r\n  left: \"5%\",\r\n  display: \"inline-flex\",\r\n  // marginLeft: \"auto\",\r\n  // marginRight: \"auto\",\r\n  justifyContent: \"space-around\",\r\n  outline: \"none\",\r\n  // left: \"50%\",\r\n  // transform: \"translate(-50%, -50%)\",\r\n  width: \"90%\",\r\n  // bgcolor: \"background.paper\",\r\n  // border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpen}><img\r\n            className={classes.desc}\r\n            src=\"https://i.imgur.com/jlZySn6.jpeg\"\r\n          ></img></Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <img\r\n            className={classes.desc}\r\n            src=\"https://i.imgur.com/jlZySn6.jpeg\"\r\n          ></img>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { Link as RouteLink, useParams } from \"react-router-dom\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {\r\n  fetchCollectedOBJKTs,\r\n  fetchCreatedOBJKTs,\r\n  generateThumbnailCR,\r\n} from \"../helpers/hicdex.js\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return <div hidden={value !== index}>{children}</div>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // padding: 80,\r\n    width: \"99%\",\r\n    paddingLeft: \"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    margin: theme.spacing(0),\r\n    // width: \"400px\",\r\n    // height: \"400px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.background.default,\r\n    // borderWidth: 2,\r\n    // borderRadius: 10,\r\n    // borderColor: theme.palette.text.secondary,\r\n    // borderStyle: \"solid\",\r\n    verticalAlign: \"middle\",\r\n    padding: 10,\r\n    maxHeight: 400,\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n  },\r\n  info: {\r\n    textAlign: \"left\",\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    paddingTop: 40,\r\n    overflowWrap: \"anywhere\",\r\n  },\r\n  info2: {\r\n    textAlign: \"left\",\r\n    paddingLeft: 20,\r\n    paddingBottom: 40,\r\n  },\r\n}));\r\n\r\nconst displayTypes = [\"created\", \"collected\"];\r\n\r\nexport default function AutoGrid() {\r\n  let { address } = useParams();\r\n  const [nfts, setNFTs] = useState([]);\r\n  const [collectedNFTs, setCollectedNFTs] = useState([]);\r\n  const [createdNFTs, setCreatedNFTs] = useState([]);\r\n  const [display, setDisplay] = useState(\"created\");\r\n  const [tab, setTab] = useState(0);\r\n  const toggleDisplay = async () => {\r\n    //TODO: migrate to tab change function\r\n    setDisplay(display == \"created\" ? \"collected\" : \"created\");\r\n    if (!collectedNFTs.length) {\r\n      const collected = await fetchCollectedOBJKTs(address);\r\n      setCollectedNFTs(collected);\r\n    }\r\n    console.log(display);\r\n  };\r\n\r\n  const handleChangeTab = (e, newTab) => {\r\n    setTab(newTab);\r\n    toggleDisplay();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  useEffect(async () => {\r\n    document.title = `Cipherforums | ${address}`;\r\n    const created = await fetchCreatedOBJKTs(address);\r\n    console.log(created);\r\n    setCreatedNFTs(created);\r\n  }, [address]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h4\" className={classes.info}>\r\n        {address}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" className={classes.info2}>\r\n        There is currently no cipherforums account linked to this wallet.\r\n      </Typography>\r\n      <Grid item xs={12}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Created\"></Tab>\r\n          <Tab label=\"Collected\"></Tab>\r\n        </Tabs>\r\n        <TabPanel value={tab} index={0}>\r\n          <Grid container spacing={0}>\r\n            {createdNFTs.map((createdNFTs) => (\r\n              <Grid key={createdNFTs.id} item xs={12} sm={3}>\r\n                <Paper className={classes.paper}>\r\n                  <RouteLink\r\n                    to={`/tz/nft/${createdNFTs.id}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <img\r\n                      className={classes.img}\r\n                      src={generateThumbnailCR(createdNFTs.display_uri)}\r\n                    ></img>\r\n                  </RouteLink>\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tab} index={1}>\r\n          <Grid container spacing={0}>\r\n            {collectedNFTs.map((collectedNFTs) => (\r\n              <Grid key={collectedNFTs.token.id} item xs={12} sm={3}>\r\n                <Paper className={classes.paper}>\r\n                  <RouteLink\r\n                    to={`/tz/nft/${collectedNFTs.token.id}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <img\r\n                      className={classes.img}\r\n                      src={generateThumbnailCR(collectedNFTs.token.display_uri)}\r\n                    ></img>\r\n                  </RouteLink>\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </TabPanel>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { Link as RouteLink, useParams } from \"react-router-dom\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {\r\n  fetchCollectedOBJKTs,\r\n  fetchCreatedOBJKTs,\r\n  generateThumbnailCR,\r\n} from \"../helpers/hicdex.js\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return <div hidden={value !== index}>{children}</div>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // padding: 80,\r\n    width: \"99%\",\r\n    paddingLeft: \"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    margin: theme.spacing(0),\r\n    // width: \"400px\",\r\n    // height: \"400px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.background.default,\r\n    // borderWidth: 2,\r\n    // borderRadius: 10,\r\n    // borderColor: theme.palette.text.secondary,\r\n    // borderStyle: \"solid\",\r\n    verticalAlign: \"middle\",\r\n    padding: 10,\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n  },\r\n  info: {\r\n    textAlign: \"left\",\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    paddingTop: 40,\r\n    overflowWrap: \"anywhere\",\r\n  },\r\n  info2: {\r\n    textAlign: \"left\",\r\n    paddingLeft: 20,\r\n    paddingBottom: 40,\r\n  },\r\n}));\r\n\r\nconst displayTypes = [\"created\", \"collected\"];\r\n\r\nexport default function AutoGrid() {\r\n  let { address } = useParams();\r\n  const [nfts, setNFTs] = useState([]);\r\n  const [collectedNFTs, setCollectedNFTs] = useState([]);\r\n  const [createdNFTs, setCreatedNFTs] = useState([]);\r\n  const [display, setDisplay] = useState(\"created\");\r\n  const [tab, setTab] = useState(0);\r\n  const toggleDisplay = async () => {\r\n    setDisplay(display == \"created\" ? \"collected\" : \"created\");\r\n    if (!collectedNFTs.length) {\r\n      const collected = await fetchCollectedOBJKTs(address);\r\n      setCollectedNFTs(collected);\r\n    }\r\n    console.log(display);\r\n  };\r\n\r\n  const handleChangeTab = (e, newTab) => {\r\n    setTab(newTab);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  useEffect(async () => {\r\n    document.title = `Cipherforums | ${address}`;\r\n    const created = await fetchCreatedOBJKTs(address);\r\n    console.log(created);\r\n    setCreatedNFTs(created);\r\n  }, [address]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button onClick={toggleDisplay}>\r\n        View {display == \"created\" ? \"Collected\" : \"Created\"}\r\n      </Button>\r\n      <Grid item xs={12}>\r\n        <Tabs\r\n          value={tab}\r\n          onChange={handleChangeTab}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Created\"></Tab>\r\n          <Tab label=\"Collected\"></Tab>\r\n        </Tabs>\r\n      </Grid>\r\n      <Grid container spacing={0}>\r\n        {display == \"created\" &&\r\n          createdNFTs.map((createdNFTs) => (\r\n            <Grid key={createdNFTs.id} item xs={12} sm={3}>\r\n              <Paper className={classes.paper}>\r\n                <RouteLink\r\n                  to={`/tz/nft/${createdNFTs.id}`}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <img\r\n                    className={classes.img}\r\n                    src={generateThumbnailCR(createdNFTs.display_uri)}\r\n                  ></img>\r\n                </RouteLink>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        {display == \"collected\" &&\r\n          collectedNFTs.map((collectedNFTs) => (\r\n            <Grid key={collectedNFTs.token.id} item xs={12} sm={3}>\r\n              <Paper className={classes.paper}>\r\n                <RouteLink\r\n                  to={`/tz/nft/${collectedNFTs.token.id}`}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <img\r\n                    className={classes.img}\r\n                    src={generateThumbnailCR(collectedNFTs.token.display_uri)}\r\n                  ></img>\r\n                </RouteLink>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { generateThumbnailCR } from \"../helpers/hicdex.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport LoadingIcon from \"./LoadingPageIcon.js\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport \"@google/model-viewer\";\r\nimport { Typography } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 20,\r\n    // padding: 80,\r\n    width: \"100%\",\r\n    paddingBottom: 20,\r\n  },\r\n  img: {\r\n    height: \"75vmin\",\r\n  },\r\n  iframe: {\r\n    paddingTop: 20,\r\n    height: \"75vmin\",\r\n    width: \"75vmin\",\r\n    border: \"none\",\r\n  },\r\n  canvas: {\r\n    paddingTop: 20,\r\n    height: \"500px\",\r\n    width: \"500px\",\r\n    border: \"none\",\r\n  },\r\n  model: {\r\n    // backgroundColor: \"red\",\r\n    paddingTop: 20,\r\n    height: \"800px\",\r\n    width: \"800px\",\r\n    border: \"none\",\r\n  },\r\n}));\r\nfunction Media(props) {\r\n  const { nft } = props;\r\n  useEffect(() => {\r\n    if (nft.mime?.startsWith(\"model\")) {\r\n      setLoading(false);\r\n    }\r\n  }, [nft]);\r\n  const [loading, setLoading] = useState(true);\r\n  // figure out the media type\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {loading && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: 0,\r\n            right: 0,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            height: \"70vmin\",\r\n            width: \"70vmin\",\r\n            backgroundImage: `url(${\r\n              nft.display_uri && generateThumbnailCR(nft.display_uri)\r\n            })`,\r\n            backgroundPosition: \"center\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: -20,\r\n              textAlign: \"center\",\r\n              margin: \"0 auto\",\r\n              left: 0,\r\n              right: 0,\r\n            }}\r\n          >\r\n            Showing Preview while full file is loading\r\n          </div>\r\n          <LinearProgress style={{ width: \"70vmin\" }} />\r\n\r\n          <div\r\n            style={{\r\n              height: \"70vmin\",\r\n              width: \"70vmin\",\r\n              background: \"rgba(0,0,0, 0.3)\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      )}\r\n      <div style={{ opacity: loading ? 0 : 1, transition: \"all 0.3s ease\" }}>\r\n        {nft.mime?.startsWith(\"video\") && (\r\n          <video\r\n            onLoadStart={() => setLoading(false)}\r\n            width=\"750\"\r\n            height=\"500\"\r\n            controls\r\n          >\r\n            <source\r\n              src={generateThumbnailCR(nft.artifact_uri)}\r\n              type={nft.mime}\r\n            />\r\n          </video>\r\n        )}\r\n        {nft.mime?.startsWith(\"image\") && (\r\n          <img\r\n            onLoad={() => setLoading(false)}\r\n            className={classes.img}\r\n            src={nft.artifact_uri && generateThumbnailCR(nft.artifact_uri)}\r\n          />\r\n        )}\r\n        {nft.mime?.startsWith(\"application/x-directory\") && (\r\n          <iframe\r\n            onLoad={() => setLoading(false)}\r\n            className={classes.iframe}\r\n            title=\"html-embed\"\r\n            src={nft.artifact_uri && generateThumbnailCR(nft.artifact_uri)}\r\n          ></iframe>\r\n        )}\r\n        {nft.mime?.startsWith(\"model\") && (\r\n          <div className={classes.modelHold}>\r\n            <Container>\r\n              <model-viewer\r\n                className={classes.model}\r\n                style={{\r\n                  width: \"75vmin\",\r\n                  height: \"75vmin\",\r\n                  margin: \"auto\",\r\n                }}\r\n                onLoad={() => setLoading(false)}\r\n                src={nft.artifact_uri && generateThumbnailCR(nft.artifact_uri)}\r\n                autoplay=\"true\"\r\n                auto-rotate=\"true\"\r\n                data-js-focus-visible=\"true\"\r\n                interaction-prompt=\"none\"\r\n                ar=\"true\"\r\n                ar-modes=\"webxr scene-viewer quick-look\"\r\n                camera-controls=\"true\"\r\n                ar-status=\"not-presenting\"\r\n              ></model-viewer>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Media;\r\n","export function getHistory(objkt) {\r\n  const history = [...objkt.trades, ...objkt.swaps];\r\n  history.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n  return history.map((transaction) => parseTransaction(transaction));\r\n}\r\n\r\nfunction parseTransaction(transaction) {\r\n  if (transaction.buyer) {\r\n    return { type: \"trade\", ...transaction };\r\n  } else {\r\n    return { type: \"list\", ...transaction };\r\n  }\r\n}\r\n","function HistoryList({ nftHistory }) {\r\n  return <div></div>;\r\n}\r\n\r\nexport default HistoryList;\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { Link } from \"@mui/material\";\r\n\r\nconst columns = [\r\n  { field: \"type\", headerName: \"Type\", width: 100, editable: false },\r\n  {\r\n    field: \"seller\",\r\n    headerName: \"Seller\",\r\n    width: 200,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: \"buyer\",\r\n    headerName: \"Buyer\",\r\n    width: 200,\r\n    editable: false,\r\n    renderCell: (params) => {\r\n      return (\r\n        <Link component={RouteLink} to={\"/tz/\" + params.row.buyerAddr}>\r\n          {params.value}\r\n        </Link>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"amount\",\r\n    headerName: \"Amount\",\r\n    type: \"number\",\r\n    width: 110,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: \"price_tez\",\r\n    headerName: \"Price (tez)\",\r\n    type: \"number\",\r\n    width: 200,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: \"price_usd\",\r\n    headerName: \"Price (usd)\",\r\n    type: \"number\",\r\n    width: 200,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: \"time\",\r\n    headerName: `Time (${Intl.DateTimeFormat().resolvedOptions().timeZone}`,\r\n    type: \"dateTime\",\r\n    width: 200,\r\n    editable: false,\r\n  },\r\n];\r\n\r\n// const rows = [\r\n//   {\r\n//     id: 1,\r\n//     type: \"swap\",\r\n//     seller: \"Snow\",\r\n//     buyer: \"Jon\",\r\n//     amount: 1,\r\n//     price_tez: 10,\r\n//     price_usd: 10 * 4,\r\n//     time: new Date().toLocaleString(),\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     type: \"swap\",\r\n//     seller: \"Snow\",\r\n//     buyer: \"Jon\",\r\n//     amount: 1,\r\n//     price_tez: 20,\r\n//     price_usd: 20 * 4,\r\n//     time: new Date(1000).toLocaleString(),\r\n//   },\r\n// ];\r\n\r\nexport default function HistoryGrid({ data }) {\r\n  const [rows, setRows] = useState([]);\r\n  useEffect(async () => {\r\n    const res = await fetch(\"https://api.tzkt.io/v1/quotes/last\");\r\n\r\n    const currPrice = await res.json();\r\n    console.log(currPrice);\r\n\r\n    // parse rows\r\n    const parsed = data.map((row, i) => {\r\n      return {\r\n        id: i,\r\n        buyerAddr: row.buyer?.address,\r\n        sellerAddr: row.seller?.address || row.creator.address,\r\n        type: row.type,\r\n        seller:\r\n          row.seller?.name ||\r\n          row.seller?.address ||\r\n          row.creator.name ||\r\n          row.creator.address,\r\n        buyer: row.buyer?.name || row.buyer?.address || \"\",\r\n        amount: row.amount,\r\n        price_tez: (row.swap ? row.swap.price : row.price) / 1000000,\r\n        price_usd:\r\n          ((row.swap ? row.swap.price : row.price) / 1000000) * currPrice.usd,\r\n        time: new Date(row.timestamp).toLocaleString(),\r\n      };\r\n    });\r\n    console.log(\"row data:\", data);\r\n    setRows(parsed);\r\n  }, [data]);\r\n  return (\r\n    <div style={{ height: 1000, width: \"100%\" }}>\r\n      <DataGrid\r\n        sx={{\r\n          border: \"none\",\r\n          borderColor: \"primary.light\",\r\n          \"& .MuiDataGrid-cell:hover\": {\r\n            color: \"primary.main\",\r\n          },\r\n          \"& .MuiDataGrid-sortIcon\": {\r\n            color: \"primary.main\",\r\n          },\r\n          \"& .MuiDataGrid-menuIconButton\": {\r\n            color: \"primary.main\",\r\n          },\r\n        }}\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={50}\r\n        rowsPerPageOptions={[50]}\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container, Button, IconButton } from \"@material-ui/core\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Comment } from \"../components/Comment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchOBJKTDetails, generateThumbnailCR } from \"../helpers/hicdex.js\";\r\nimport { query } from \"../helpers/api.js\";\r\nimport Media from \"../components/Media\";\r\nimport ConfirmDelete from \"../components/ConfirmDelete\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport LoadingIcon from \"../components/LoadingPageIcon\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { getHistory } from \"../helpers/objkt\";\r\nimport { Box } from \"@mui/material\";\r\nimport HistoryList from \"../components/HistoryList\";\r\nimport HistoryGrid from \"../components/HistoryGrid\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // padding: 80,\r\n    width: \"99%\",\r\n    paddingLeft: \"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(0),\r\n    margin: theme.spacing(0),\r\n    // width: \"400px\",\r\n    // height: \"400px\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.background.default,\r\n    // borderWidth: 2,\r\n    // borderRadius: 10,\r\n    // borderColor: theme.palette.text.secondary,\r\n    // borderStyle: \"solid\",\r\n    verticalAlign: \"middle\",\r\n    height: \"70vmin\",\r\n    // padding: 10,\r\n  },\r\n  img: {\r\n    paddingTop: 20,\r\n    height: \"70vmin\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"left\",\r\n    marginTop: 80,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  footer: {\r\n    display: \"flex\",\r\n    justifyContent: \"left\",\r\n    // marginTop: 20,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    color: theme.palette.primary.main,\r\n  },\r\n  address: {\r\n    justifyContent: \"left\",\r\n    // padding: 0,\r\n    // paddingLeft: 20,\r\n    minHeight: 1,\r\n    marginTop: 20,\r\n    // marginLeft: 10,\r\n  },\r\n  comment: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    marginLeft: 20,\r\n  },\r\n  linked: {\r\n    color: theme.palette.primary.main,\r\n    marginLeft: 30,\r\n  },\r\n  addr: {\r\n    textAlign: \"center\",\r\n    listStyleType: \"none\",\r\n  },\r\n  alertText: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return <div hidden={value !== index}>{children}</div>;\r\n}\r\n\r\nexport default function Public() {\r\n  const [error, setError] = useState(false);\r\n  const [helperText, setHelperText] = useState(\"\");\r\n  const [nft, setNFT] = useState({});\r\n  const [nftOwners, setNftOwners] = useState([]);\r\n  const [nftHistory, setNftHistory] = useState([]);\r\n  const [postCommentText, setPostCommentText] = useState(\"\");\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [likeCount, setLikeCount] = useState(0);\r\n  const { id } = useParams();\r\n  const [openConfirmDelete, setOpenConfirmDelete] = useState(false);\r\n  const [deleteCommentData, setDeleteCommentData] = useState({});\r\n  const [tab, setTab] = useState(0);\r\n  const handleChangeTab = (e, newTab) => {\r\n    setTab(newTab);\r\n  };\r\n  const handleToggleLike = async () => {\r\n    // make fetch request\r\n    if (!isLiked) {\r\n      const data = await query(`/api/likes?nftID=${id}&chainType=${\"tz\"}`, {\r\n        displayURI: nft.display_uri,\r\n      });\r\n      if (data.success) {\r\n        setIsLiked(true);\r\n        setLikeCount(likeCount + 1);\r\n      }\r\n    } else {\r\n      const res = await fetch(`/api/likes?nftID=${id}&chainType=${\"tz\"}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setIsLiked(false);\r\n        setLikeCount(likeCount - 1);\r\n      }\r\n    }\r\n  };\r\n  const handleSubmitComment = async () => {\r\n    const data = await query(`/api/comments?nftID=${id}&chainType=${\"tz\"}`, {\r\n      text: postCommentText,\r\n    });\r\n    if (!data.success) {\r\n      return alert(data.message);\r\n    }\r\n    setPostCommentText(\"\");\r\n  };\r\n  useEffect(async () => {\r\n    const likeStatus = await query(\r\n      `/api/likes/check?nftID=${id}&chainType=${\"tz\"}`\r\n    );\r\n    // console.log(\"is liked: \", likeStatus);\r\n    setIsLiked(likeStatus.isLiked);\r\n    const data = await fetchOBJKTDetails(id);\r\n    const commentData = await query(\r\n      `/api/comments?nftID=${id}&chainType=${\"tz\"}`\r\n    );\r\n    const { count } = await query(\r\n      `/api/likes/count?nftID=${id}&chainType=${\"tz\"}`\r\n    );\r\n    setLikeCount(count);\r\n    setComments(commentData.data);\r\n    setNFT(data);\r\n    document.title = `Cipherforums | ${data.title}`;\r\n    // query api for comments relating to nft\r\n    await fetchObjectHistory();\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const fetchObjectHistory = async () => {\r\n    const data = await fetchOBJKTDetails(id);\r\n    const objktHistory = getHistory(data);\r\n    setNftHistory(objktHistory);\r\n    setNftOwners(data.token_holders);\r\n    console.log(data);\r\n  };\r\n\r\n  const handleDeleteComment = (data) => () => {\r\n    setOpenConfirmDelete(true);\r\n    setDeleteCommentData(data);\r\n  };\r\n  const handleDecision = (decision) => async () => {\r\n    if (decision === \"agree\") {\r\n      // make fetch to delete\r\n      const res = await fetch(\"/api/comments\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id: deleteCommentData }),\r\n      });\r\n      const data = await res.json();\r\n      if (!data.success) {\r\n        alert(data.message);\r\n      }\r\n    }\r\n    setOpenConfirmDelete(false);\r\n  };\r\n\r\n  const handleCloseConfirmDelete = () => {\r\n    setOpenConfirmDelete(false);\r\n  };\r\n  if (!nft || likeCount === null)\r\n    return (\r\n      <div>\r\n        <div style={{ marginTop: \"20%\" }}></div>\r\n        <LoadingIcon />\r\n      </div>\r\n    );\r\n  return (\r\n    <Container>\r\n      <ConfirmDelete\r\n        open={openConfirmDelete}\r\n        handleDecision={handleDecision}\r\n        handleClose={handleCloseConfirmDelete}\r\n      />\r\n      <Grid item xs={12} sm={12}>\r\n        <Box className={classes.paper}>\r\n          <Media nft={nft}></Media>\r\n        </Box>\r\n        <Toolbar className={classes.title}>\r\n          <Typography variant=\"h5\">{nft.title}</Typography>\r\n        </Toolbar>\r\n        <Toolbar className={classes.footer}>\r\n          <Typography variant=\"body1\" style={{ whiteSpace: \"pre-line\" }}>\r\n            {nft.description}\r\n          </Typography>\r\n        </Toolbar>\r\n        <Toolbar className={classes.address}>\r\n          <RouteLink\r\n            to={`/tz/${nft.creator?.address}`}\r\n            style={{ textDecoration: \"none\", color: \"white\" }}\r\n          >\r\n            <Typography className={classes.footer} variant=\"subtitle2\">\r\n              by {nft.creator?.name || nft.creator?.address}\r\n            </Typography>\r\n          </RouteLink>\r\n        </Toolbar>\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.linked}\r\n            disabled={!nft.display_uri}\r\n            onClick={handleToggleLike}\r\n          >\r\n            {isLiked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n          </IconButton>\r\n          <Typography>{likeCount}</Typography>\r\n        </Toolbar>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <Grid item xs={12}>\r\n          <Tabs\r\n            value={tab}\r\n            onChange={handleChangeTab}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Comments\"></Tab>\r\n            <Tab label=\"Owners\"></Tab>\r\n            <Tab label=\"History\"></Tab>\r\n          </Tabs>\r\n        </Grid>\r\n\r\n        <TabPanel value={tab} index={0}>\r\n          <Divider></Divider>\r\n          <Toolbar className={classes.address}>\r\n            <Typography className={classes.footer}>Comments</Typography>\r\n          </Toolbar>\r\n\r\n          {comments?.map((comment, i) => (\r\n            <Comment\r\n              key={i}\r\n              comment={comment}\r\n              secret={null}\r\n              handleDeleteComment={handleDeleteComment}\r\n            />\r\n          ))}\r\n\r\n          <TextField\r\n            error={error}\r\n            helperText={helperText}\r\n            className={classes.comment}\r\n            id=\"outlined-textarea\"\r\n            label=\"Reply\"\r\n            value={postCommentText}\r\n            onInput={(e) => {\r\n              setError(false);\r\n              setHelperText(\"\");\r\n              setPostCommentText(e.target.value);\r\n            }}\r\n            placeholder=\"Enter your comment here\"\r\n            multiline\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          />\r\n          <Container className={classes.submitBox}>\r\n            <Button\r\n              disabled={!postCommentText.length}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmitComment}\r\n            >\r\n              Submit Comment\r\n            </Button>\r\n            {/* <SecretBox updateSecret={updateSecret} secret={secret} /> */}\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={tab} index={1}>\r\n          <Stack>\r\n            {nftOwners.map((owner, i) => (\r\n              <div key={i}>\r\n                {owner.quantity} {owner.holder.name || owner.holder.address}{\" \"}\r\n              </div>\r\n            ))}\r\n          </Stack>\r\n        </TabPanel>\r\n        <TabPanel value={tab} index={2}>\r\n          <br />\r\n          <HistoryGrid data={nftHistory} />\r\n          {/* <Stack sx={{ width: \"100%\" }} spacing={2}>\r\n            {nftHistory.map((t, i) => (\r\n              <div>\r\n                {t.type == \"swap\" ? (\r\n                  <Alert variant=\"outlined\" severity=\"info\">\r\n                    <Typography className={classes.alertText}>\r\n                      {t.amount} items listed by{\" \"}\r\n                      {t.creator.name || t.creator.address} for{\" \"}\r\n                      {t.price / 1000000} tez at{\" \"}\r\n                      {new Date(t.timestamp).toLocaleTimeString()} on{\" \"}\r\n                      {new Date(t.timestamp).toLocaleDateString()}\r\n                    </Typography>\r\n                  </Alert>\r\n                ) : (\r\n                  <Alert variant=\"outlined\" severity=\"success\">\r\n                    <Typography className={classes.alertText}>\r\n                      {t.amount} items sold {t.seller.name || t.seller.address}{\" \"}\r\n                      to {t.buyer.name || t.buyer.address} for{\" \"}\r\n                      {t.swap.price / 1000000} tez at{\" \"}\r\n                      {new Date(t.timestamp).toLocaleTimeString()} on{\" \"}\r\n                      {new Date(t.timestamp).toLocaleDateString()}\r\n                    </Typography>\r\n                  </Alert>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </Stack> */}\r\n        </TabPanel>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n  },\r\n  item: {\r\n    padding: 10,\r\n  },\r\n  nft: {\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nexport default function ImgMediaCard() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <Card sx={{ maxWidth: 450 }}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"green iguana\"\r\n              height=\"300\"\r\n              image=\"https://i.imgur.com/Pd7Tk2D.jpeg\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body2\" component=\"div\">\r\n                @User\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                Here is the title of a user post to feed\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <FavoriteIcon />\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card sx={{ maxWidth: 400 }}>\r\n            <Typography\r\n              className={classes.nft}\r\n              style={{ textAlign: \"center\" }}\r\n              variant=\"caption\"\r\n              color=\"text.secondary\"\r\n            >\r\n              NFT Title\r\n            </Typography>\r\n            <Card sx={{ maxWidth: 200, margin: \"auto\" }}>\r\n              <CardMedia\r\n                className={classes.item}\r\n                component=\"img\"\r\n                alt=\"Not found\"\r\n                height=\"200\"\r\n                image=\"https://i.imgur.com/KQGaGlg.jpeg\"\r\n              />\r\n            </Card>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body2\" component=\"div\">\r\n                @User\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                This is a comment left on an nft\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <FavoriteIcon />\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card sx={{ maxWidth: 225 }}>\r\n            <Typography\r\n              className={classes.nft}\r\n              style={{ textAlign: \"center\" }}\r\n              variant=\"caption\"\r\n              color=\"text.secondary\"\r\n            >\r\n              NFT Title\r\n            </Typography>\r\n            <CardMedia\r\n              className={classes.nft}\r\n              component=\"img\"\r\n              alt=\"Not found\"\r\n              height=\"225\"\r\n              image=\"https://i.imgur.com/msu8S2y.png\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body2\" component=\"div\">\r\n                @User *what purchase looks like*\r\n              </Typography>\r\n            </CardContent>\r\n            <FavoriteIcon />\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card sx={{ maxWidth: 450 }}>\r\n            <Typography gutterBottom variant=\"body2\" component=\"div\">\r\n              @UserA\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              He is something to react to\r\n            </Typography>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body1\" component=\"div\">\r\n                @UserB\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Here is a response to the above message\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <FavoriteIcon />\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card sx={{ maxWidth: 400 }}>\r\n            <Typography\r\n              className={classes.nft}\r\n              style={{ textAlign: \"center\" }}\r\n              variant=\"caption\"\r\n              color=\"text.secondary\"\r\n            >\r\n              \"Post Title\"\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"caption\" component=\"div\">\r\n              @UserA\r\n            </Typography>\r\n            <Card sx={{ maxWidth: 200, margin: \"auto\" }}>\r\n              <CardMedia\r\n                className={classes.item}\r\n                component=\"img\"\r\n                alt=\"Not found\"\r\n                height=\"200\"\r\n                image=\"https://i.imgur.com/trZxMHq.jpeg\"\r\n              />\r\n            </Card>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body2\" component=\"div\">\r\n                @User\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                This is a comment left on a post with an image\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <FavoriteIcon />\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card sx={{ maxWidth: 450 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              \"Here is the title of a user post with no image\"\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"caption\" component=\"div\">\r\n              @UserA\r\n            </Typography>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body1\" component=\"div\">\r\n                @UserB\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Here is a comment on the post, may be encrypted\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <FavoriteIcon />\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 20,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  bin: {\r\n    padding: 30,\r\n  },\r\n  bin2: {\r\n    padding: 100,\r\n    color: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nexport default function Public() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Typography variant=\"h3\">404</Typography>\r\n      <Typography className={classes.bin}>\r\n        00110100 00110000 00110100\r\n      </Typography>\r\n      <Typography variant=\"h3\">This page couldn't be found :(</Typography>\r\n      <Typography variant=\"h6\" className={classes.bin2}>\r\n        01010011 01101111 01110010 01110010 01111001 00100001\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Container, Grid, Typography, withStyles } from \"@material-ui/core\";\r\nimport logo from \"../logo.svg\";\r\nconst WhiteText = withStyles({\r\n  root: {\r\n    color: \"white\",\r\n    opacity: 0.9,\r\n  },\r\n})(Typography);\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"500px\",\r\n        width: \"100%\",\r\n\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Container>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <br />\r\n            <img src={logo} style={{ height: 70 }} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Container>\r\n              <WhiteText variant=\"h6\">\r\n                A forum designed for cryptographically secure communication.\r\n              </WhiteText>\r\n              <WhiteText variant=\"subtitle1\">\r\n                This website uses encryption and obfuscation to provide privacy,\r\n                scarcity, and secrecy to content. The goal of Cipherforums is to\r\n                allow individuals to choose what degree of accessibility they\r\n                would like their social content on the internet to have.\r\n              </WhiteText>\r\n            </Container>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <WhiteText variant=\"h6\" align=\"right\">\r\n              Contact Us\r\n            </WhiteText>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <WhiteText align=\"center\">\r\n              Cipherforums.com © Copyright 2022. All Rights Reserved.\r\n            </WhiteText>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useLayoutEffect } from \"react\";\r\n\r\nconst ScrollToTop = () => {\r\n  useLayoutEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","// import Matrix from \"../components/matrix/components/Matrix\";\r\nconst MatrixPage = () => {\r\n  return <div>{/* <Matrix /> */}</div>;\r\n};\r\n\r\nexport default MatrixPage;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\n// Material UI components\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\n// Pages\r\nimport User from \"./pages/User\";\r\nimport Post from \"./pages/Post\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Login from \"./pages/Login\";\r\nimport Create from \"./pages/Create\";\r\nimport Public from \"./pages/Public\";\r\nimport Help from \"./pages/Help\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport PubForum from \"./pages/PubForum\";\r\nimport CreatePublic from \"./pages/CreatePublic\";\r\nimport Confirm from \"./components/Confirm\";\r\nimport Verify from \"./pages/Verify\";\r\nimport Fullscreen from \"./components/Fullscreen\";\r\nimport Nftdisplay from \"./pages/Nftdisplay\";\r\nimport NftExplore from \"./pages/NftExplore\";\r\nimport Nft from \"./pages/Nft\";\r\nimport Feed from \"./pages/Feed\";\r\nimport FourZero from \"./pages/FourZero\";\r\n\r\n// Components\r\nimport MenuAppBar from \"./components/MenuAppBar\";\r\n\r\nimport \"@fontsource/ibm-plex-mono\";\r\n\r\n// import ibmPlexMono from \"./fonts/IBMPlexMono-Bold.ttf\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Footer from \"./components/Footer\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport MatrixPage from \"./pages/Matrix\";\r\n\r\n// mui theme\r\nimport {\r\n  createTheme as createThemeMui,\r\n  ThemeProvider as ThemeProviderMui,\r\n} from \"@mui/material/styles\";\r\n\r\n// --------------------------\r\n// green theme\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#00e019\",\r\n      main2: \"#ffffff\",\r\n      main3: \"#006600\",\r\n      contrastText: \"#121212\",\r\n    },\r\n    secondary: {\r\n      main: \"#FFFF00\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    background: {\r\n      default: \"#121212\",\r\n      // default: \"#000000\",\r\n      // paper: \"#171717\",\r\n      paper: \"#121212\",\r\n    },\r\n    text: {\r\n      // primary: \"#0aff00\",\r\n      // secondary: \"#00ff1b\",\r\n\r\n      primary: \"#00ff1b\",\r\n      secondary: \"#00ff1b\",\r\n      disabled: \"#00ff1b\",\r\n      hint: \"#00ff1b\",\r\n    },\r\n    other: {\r\n      primary: \"#FFFF00\",\r\n    },\r\n    divider: \"rgba(0,0,0,0.12)\",\r\n  },\r\n  typography: {\r\n    allVariants: {\r\n      fontFamily: \"IBM Plex Mono\",\r\n    },\r\n  },\r\n});\r\n\r\nconst themeMui = createThemeMui({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#00e019\",\r\n      // main: \"#ffffff\",\r\n      contrastText: \"#121212\",\r\n    },\r\n    secondary: {\r\n      main: \"#FFFF00\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    background: {\r\n      default: \"#121212\",\r\n      // paper: \"#171717\",\r\n      paper: \"#121212\",\r\n    },\r\n    text: {\r\n      // primary: \"#0aff00\",\r\n      // secondary: \"#00ff1b\",\r\n\r\n      primary: \"#00ff1b\",\r\n      secondary: \"#00ff1b\",\r\n      disabled: \"#00ff1b\",\r\n      hint: \"#00ff1b\",\r\n    },\r\n    other: {\r\n      primary: \"#FFFF00\",\r\n    },\r\n    divider: \"rgba(0,0,0,0.12)\",\r\n  },\r\n  typography: {\r\n    allVariants: {\r\n      fontFamily: \"IBM Plex Mono\",\r\n    },\r\n  },\r\n});\r\n\r\n// --------------------------\r\n// b&w theme\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     type: \"light\",\r\n//     primary: {\r\n//       main: \"#000000\",\r\n//       // main: \"#ffffff\",\r\n//       contrastText: \"#ffffff\",\r\n//     },\r\n//     secondary: {\r\n//       main: \"#76ff03\",\r\n//       contrastText: \"#000000\",\r\n//     },\r\n//     background: {\r\n//       default: \"#ffffff\",\r\n//       // paper: \"#171717\",\r\n//       paper: \"#ffffff\",\r\n//     },\r\n//     text: {\r\n//       // primary: \"#0aff00\",\r\n//       // secondary: \"#00ff1b\",\r\n\r\n//       primary: \"#000000\",\r\n//       secondary: \"#000000\",\r\n//       disabled: \"#00ff1b\",\r\n//       hint: \"#00ff1b\",\r\n//     },\r\n//     other: {\r\n//       primary: \"#FFFF00\",\r\n//     },\r\n//     divider: \"rgba(0,0,0,0.12)\",\r\n//   },\r\n//   typography: {\r\n//     allVariants: {\r\n//       fontFamily: \"IBM Plex Mono\",\r\n//     },\r\n//   },\r\n// });\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     type: \"light\",\r\n//     primary: {\r\n//       main: \"#455a64\",\r\n//     },\r\n//     secondary: {\r\n//       main: \"#76ff03\",\r\n//     },\r\n//     text: {\r\n//       primary: \"#303E46\",\r\n//       secondary: \"#455a64\",\r\n//       disabled: \"#00ff1b\",\r\n//       hint: \"#00ff1b\",\r\n//     },\r\n//     divider: \"rgba(0,0,0,0.12)\",\r\n//   },\r\n//   typography: {\r\n//     fontFamily: \"IBM Plex Mono, Monospace\",\r\n//   },\r\n// });\r\n\r\nexport default function App() {\r\n  const [loggedUser, setLoggedUser] = useState({ ok: 0, username: null });\r\n  const [logEvent, setLogEvent] = useState(null);\r\n  useEffect(async () => {\r\n    const res = await fetch(\"/api/login/status/\", {\r\n      credentials: \"include\",\r\n    });\r\n    if (!res || res.status != 200) {\r\n      console.log(res);\r\n      console.log(\"error\");\r\n      return;\r\n    }\r\n    const data = await res.json();\r\n    setLoggedUser(data);\r\n  }, []);\r\n  const handleLogin = (username) => {\r\n    setLoggedUser({ ok: 1, username: username });\r\n    setLogEvent(null);\r\n  };\r\n  const handleLogout = (username) => {\r\n    // setLoggedIn = false;\r\n  };\r\n  return (\r\n    <ThemeProviderMui theme={themeMui}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Box\r\n          style={{\r\n            position: \"relative\",\r\n            minHeight: \"150vh\",\r\n            paddingBottom: \"500px\",\r\n          }}\r\n        >\r\n          <Router>\r\n            <MenuAppBar auth={loggedUser} />\r\n            <ScrollToTop />\r\n            <Switch>\r\n              <Route exact path=\"/@:username\">\r\n                <User />\r\n              </Route>\r\n              <Route path=\"/@:username/:postname\">\r\n                <Post />\r\n              </Route>\r\n              <Route path=\"/post/:title\">\r\n                <Post />\r\n              </Route>\r\n              <Route path=\"/settings\">\r\n                <Settings />\r\n              </Route>\r\n              <Route path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <Login handleLogin={handleLogin} />\r\n              </Route>\r\n              <Route path=\"/create/public/:topic\">\r\n                <CreatePublic />\r\n              </Route>\r\n              <Route path=\"/create\">\r\n                <Create />\r\n              </Route>\r\n              <Route path=\"/public/:topic/:postname\">\r\n                <Post />\r\n              </Route>\r\n              <Route path=\"/public/:topic\">\r\n                <PubForum auth={loggedUser} />\r\n              </Route>\r\n              <Route path=\"/public\">\r\n                <Public />\r\n              </Route>\r\n              <Route path=\"/Help\">\r\n                <Help />\r\n              </Route>\r\n              <Route path=\"/Home\">\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/Search\">\r\n                <Search />\r\n              </Route>\r\n              <Route path=\"/Confirm\">\r\n                <Confirm />\r\n              </Route>\r\n              <Route path=\"/Verify/:emailToken\">\r\n                <Verify />\r\n              </Route>\r\n              <Route path=\"/Fullscreen\">\r\n                <Fullscreen />\r\n              </Route>\r\n              <Route exact path=\"/tz/:address\">\r\n                <Nftdisplay />\r\n              </Route>\r\n              <Route path=\"/tz/nft/:id\">\r\n                <Nft />\r\n              </Route>\r\n              <Route path=\"/NFt\">\r\n                <Nft />\r\n              </Route>\r\n              <Route path=\"/Feed\">\r\n                <Feed />\r\n              </Route>\r\n              <Route path=\"/matrix\">\r\n                <MatrixPage />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"*\">\r\n                <FourZero />\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n          </Router>\r\n        </Box>\r\n      </ThemeProvider>\r\n    </ThemeProviderMui>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}